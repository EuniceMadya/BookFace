{"version":3,"sources":["UserContext.js","api/domain.js","api/updatePassword.js","components/AccountSettingView.js","api/getAdmin.js","components/MeetingView.js","components/DiscussionThreadsView.js","api/login.js","components/RegisterView.js","components/DashboardView.js","components/LoginView.js","components/ClubHomeView.js","components/ClubDiscussionView.js","components/PollView.js","components/ClubAdminView.js","components/ClubRedirect.js","App.js","MainApp.js","index.js","logos/bookface.jpg"],"names":["UserContext","React","createContext","token","toggleToken","userId","profilePic","loggedIn","setLoggedIn","domain","updatePassword","password","openDialog","CryptoJS","require","key","enc","Utf8","parse","process","iv","payload","Param_to_change","New_value","AES","encrypt","mode","CBC","padding","pad","Pkcs7","toString","User_ID","axios","url","method","data","headers","Authorization","then","withRouter","props","useContext","useState","window","innerWidth","vpWidth","setVPWidth","open","setOpen","userNameTyping","setUserNameTyping","userName","setUserName","setPassword","picture","setPicture","toDash","setToDash","classes","makeStyles","theme","content","width","card","spacing","button","background","boxShadow","goBackFab","margin","top","right","bottom","left","position","height","useStyles","fileInput","createRef","getUserName","response","username","profile_pic","useEffect","setViewName","disableRedirect","handleResize","addEventListener","removeEventListener","closeDialog","Grid","container","direction","alignItems","justify","style","marginTop","item","Typography","variant","Card","className","continer","Avatar","alt","src","htmlFor","accept","input","display","id","type","multiple","onChange","target","fileReader","FileReader","file","files","onload","e","result","readAsDataURL","ref","Button","component","marginLeft","onClick","TextField","label","value","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","color","autoFocus","Fab","aria-label","extendedIcon","to","getAdmin","clubId","setAdmin","BookClub_ID","parseInt","isAdmin","MeetingView","useParams","meetings","setMeetings","snackBarOpened","setSnackBarOpened","snackBarDateOpened","setsnackBarDateOpened","snackBarLocationOpened","setsnackBarLocationOpened","pageIndex","setPageIndex","pages","setPages","isFuture","setFuture","newBook","setNewBook","Date","timeState","setTimeState","dateState","setDateState","newLocation","setNewLocation","dialogOpened","setDialogOpened","toHome","setToHome","toDiscuss","setToDiscuss","toPoll","setToPoll","toAdmin","setToAdmin","setIsAdmin","fab","marginRight","clubHomeView","paddingTop","forumLogo","activityPaper","attend","going","addMeetingBtn","dispMeetings","meetingArray","array","push","outer","inner","i","length","time","Time","split","hours","timeStamp","TimeStamp","pageArray","loopPages","getMeetings","attendEvent","meeting","attendance","Meeting_ID","deleteMeeting","ID","a","Divider","map","index","Paper","Title","Location","user_attendance","disabled","changeIndex","fullWidth","defaultValue","InputLabelProps","shrink","utils","DateFnsUtils","clearable","ampm","KeyboardButtonProps","newDate","reverse","join","newTime","getHours","getMinutes","Snackbar","anchorOrigin","vertical","horizontal","message","DiscussionThreadsView","discuzId","threadTitle","newContent","setNewContent","toMeeting","setToMeeting","threads","setThreads","addComment","deleteDiscuz","Name","getClubName","dispThreads","threadArray","getThreads","Discussion_ID","Threads","toDiscussView","deleteDiscussion","deleteThread","Thread_ID","thread","marginBottom","Content","multiline","rows","login","email","goToDashboardView","openSnackBar","setloggedIn","cipherpassword","post","catch","RegisterView","setEmail","confirmedPassword","setConfirmedPassword","toLogin","setToLogin","settoDash","regisFailOpened","setRegisFailOpened","CssBaseline","Logo","media","avatar","addClub","history","toClub","redirectClub","clubIndex","setClubIndex","tags","setTags","setIndex","clubs","setClubs","newName","setNewName","newTag","setNewTag","newTags","setNewTags","showPages","setShowPages","effect","getClubs","dispClubs","clubArray","console","log","searchClubs","tagString","tagArray","trim","Tags","onAddTagChange","dupNewTags","onKeyPress","InputProps","fontSize","List","club","ButtonBase","CardActionArea","CardHeader","charAt","title","CardMedia","image","Profile_Pic","tag","clubTags","LoginView","toReg","setToReg","onEmailChange","onPasswordChange","Consumer","titles","setTitles","activities","setActivities","clubName","setClubName","useClubId","isOpen","setIsOpen","inClub","setInClub","rawDiscussions","rawPolls","newTitles","newActivities","Math","min","End_Time","fetch","isInClub","Open","toDashboardView","ClubDiscussionView","newTitle","setNewTitle","discussions","setDiscussions","discussID","setDiscussID","toThreads","setToThreads","setTitle","addDiscussion","dispDiscussions","newDiscussions","getDiscussions","postDiscussion","discussion","PollView","Polls","Options","polls","setPolls","snackBarChoiceOpened","setsnackBarChoiceOpened","updater","setUpdater","newPolls","setNewPolls","newOption","setNewOption","isCurrent","setCurrent","isPrev","setPrev","dispPolls","pollArray","showOptions","pArray","j","poll","Poll_ID","k","Checked","user_vote","getOptions","getPolls","onAddOptionChange","dupNewPolls","votePoll","option","Choice_ID","deletePoll","pIndex","Checkbox","checked","onSelectChange","inputProps","Description","vote_count","options","noneChecked","submitPoll","size","Choices","ClubAdminView","openConfirm","setOpenConfirm","isOpenToNewMembers","setIsOpenToNewMembers","nameTyping","setNameTyping","delButton","closeConfirmDialog","FormControlLabel","control","Switch","ClubRedirect","App","toAccount","setToAccount","menuOpen","setMenuOpen","openedWidth","setOpenedWidth","setToClub","viewName","openMenu","setLoginState","loggedInState","Drawer","anchor","ListItem","ListItemIcon","ListItemText","primary","AppBar","paddingLeft","Toolbar","IconButton","edge","noWrap","path","MainApp","setState","state","Provider","this","Component","config","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1263c8e0.chunk.js","sourcesContent":["import React from 'react';\n\nexport const UserContext = React.createContext({\n  token: \"default token\",\n  toggleToken: (token) => {},\n  userId: 0,\n  profilePic: \"dummyPath\",\n  loggedIn: false,\n  setLoggedIn: () => {},\n});","// make sure there is no trailing '/' character\nconst domain = 'http://ec2-13-239-93-96.ap-southeast-2.compute.amazonaws.com';\nexport default domain;\n","import axios from 'axios';\nimport domain from './domain'\n\nconst updatePassword = (password, userId, token, openDialog) => {\n  var CryptoJS = require('crypto-js');\n\n  const key = CryptoJS.enc.Utf8.parse(process.env.REACT_APP_FUN_CIPHER_KEY);\n  const iv = CryptoJS.enc.Utf8.parse(process.env.REACT_APP_FUN_CIPHER_IV);\n\n  const pwd = CryptoJS.AES.encrypt(password, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 })\n  const cipherpassword = pwd.toString();\n\n  const payload = {\n    Param_to_change: 'Password',\n    New_value: cipherpassword,\n    User_ID: userId,\n  };\n\n  axios({\n    url: `${domain}/Homepage/set_user`,\n    method: 'post',\n    data: payload,\n    headers: { Authorization: `Token ${token}` },\n  })\n    .then(() => {\n      openDialog()\n    })\n}\n\nexport default updatePassword;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\n\nimport updatePassword from '../api/updatePassword';\n\n\nimport domain from '../api/domain';\n\nimport { UserContext } from '../UserContext';\n\n\nfunction AccountSettingView(props) {\n  const { token, userId } = useContext(UserContext);\n\n  const [vpWidth, setVPWidth] = useState(window.innerWidth);\n\n  const [open, setOpen] = useState(false);\n\n  // for saving typing input:\n  const [userNameTyping, setUserNameTyping] = useState('');\n  // display:\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [picture, setPicture] = useState('https://fun-group-bucket.s3-ap-southeast-2.amazonaws.com/blank-profile-picture.png');\n\n\n  const [toDash, setToDash] = useState(false);\n\n  // styles\n  const useStyles = makeStyles((theme) => ({\n    content: {\n      width: (vpWidth - 240) * 0.8,\n    },\n    card: {\n      padding: theme.spacing(2, 3),\n    },\n    button: {\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n    goBackFab: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n    profilePic: {\n      margin: 0,\n      width: 200,\n      height: 200,\n    },\n  }));\n\n  // Style sheet.\n  const classes = useStyles();\n\n\n  const fileInput = React.createRef();\n\n\n  const getUserName = () => {\n    const payload = {\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_user`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        setUserName(response.data.username);\n        setPicture(response.data.profile_pic);\n      });\n  };\n\n  // Life Cycle Hook. Executed when the view is mounted.\n  useEffect(() => {\n    props.setViewName('Account Setting');\n    props.disableRedirect();\n    getUserName();\n  }, []);\n\n  useEffect(() => {\n    function handleResize() {\n      setVPWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const onUserNameChange = (e) => {\n    setUserNameTyping(e.target.value);\n  };\n\n  const onPasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const openDialog = () => {\n    setOpen(true);\n  };\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  const goBack = () => {\n    props.disableRedirect();\n    setToDash(true);\n  }\n\n  const showPic = ({ target }) => {\n    const fileReader = new FileReader();\n\n    const file = target.files[0];\n\n    fileReader.onload = (function () {\n      return function (e) {\n        setPicture(e.target.result);\n      };\n    }(file));\n\n    // Read in the image file as a data URL.\n    fileReader.readAsDataURL(file);\n  };\n\n  const updatePic = () => {\n    const payload = {\n      Param_to_change: 'Profile_pic',\n      New_value: picture,\n      User_ID: userId,\n    };\n    axios({\n      url: `${domain}/Homepage/set_user`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        getUserName();\n        openDialog();\n      });\n  };\n\n  const updateUserName = () => {\n    const payload = {\n      Param_to_change: 'Username',\n      New_value: userNameTyping,\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/set_user`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        getUserName();\n        openDialog();\n      });\n  };\n\n  return (\n    <div>\n      <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={2} style={{ marginTop: '15vh' }}>\n\n        <Grid item>\n          <Typography variant=\"h3\">\n            Hello,\n            {' '}\n            {userName}\n            . This is settings\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Card className={classes.card} style={{ width: '100%', height: '120%' }}>\n            <Grid continer direction=\"column\" justify=\"flex-start\" alignItems=\"center\" spacing={2}>\n              <Grid item>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={5} className={classes.content}>\n                  <Grid item>\n                    <Avatar alt=\"profile pic\" src={picture} className={classes.profilePic} />\n                  </Grid>\n                  <Grid item spacing={4}>\n                    <label htmlFor=\"raised-button-file\">\n                      <input\n                        accept=\"image/*\"\n                        className={classes.input}\n                        style={{ display: 'none' }}\n                        id=\"raised-button-file\"\n                        type=\"file\"\n                        multiple={false}\n                        onChange={showPic}\n                        ref={fileInput}\n                      />\n                      <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                          Upload profile picture\n                      </Button>\n                    </label>\n                    <p style={{ marginLeft: '1vh' }}>\n                      Support file type: jpg, jpeg, png\n                    </p>\n                    <Button onClick={updatePic} className={classes.button}>\n                        Confirm\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\n                  <Grid item>\n                    <TextField\n                      label=\"User Name\"\n                      value={userNameTyping}\n                      onChange={onUserNameChange}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Button variant=\"contained\" onClick={updateUserName} className={classes.button}>\n                      Update User Name\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid item>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\n                  <Grid item>\n                    <TextField\n                      label=\"Password\"\n                      value={password}\n                      onChange={onPasswordChange}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item>\n                    <Button variant=\"contained\" onClick={() => updatePassword(password, userId, token, openDialog)} className={classes.button}>\n                      Update Password\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Card>\n        </Grid>\n      </Grid>\n\n      <Dialog\n        open={open}\n        onClose={closeDialog}\n      >\n        <DialogTitle>Details Updated</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText>\n          We have updated your details.\n          </DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\" autoFocus>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Fab variant=\"extended\" aria-label=\"Go Back\" className={classes.goBackFab} onClick={goBack}>\n        <NavigationIcon className={classes.extendedIcon} />\n        Dashboard\n      </Fab>\n      { toDash ? (<Redirect to=\"/dashboard\" />) : <div /> }\n    </div>\n  );\n}\n\nexport default withRouter(AccountSettingView);\n","import axios from 'axios';\nimport domain from './domain'\n\nconst getAdmin = (clubId, userId, token, setAdmin) => {\n  const payload = {\n    BookClub_ID: parseInt(clubId, 10),\n    User_ID: parseInt(userId, 10),\n  };\n\n  axios({\n    url: `${domain}/Homepage/is_admin`,\n    method: 'post',\n    data: payload,\n    headers: { Authorization: `Token ${token}` },\n  })\n    .then((response) => {\n      setAdmin(response.data.isAdmin)\n    })\n}\n\nexport default getAdmin;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport Divider from '@material-ui/core/Divider';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker } from '@material-ui/pickers';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport CheckIcon from '@material-ui/icons/Check';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PollIcon from '@material-ui/icons/Poll';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport HistoryIcon from '@material-ui/icons/History';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\n\n\nimport getAdmin from '../api/getAdmin';\nimport domain from '../api/domain';\n\nimport { UserContext } from '../UserContext';\n\nfunction MeetingView() {\n  // Get param from url.\n  const { clubId } = useParams();\n\n  const { token, userId } = useContext(UserContext);\n\n  const [meetings, setMeetings] = useState([[]]);\n\n  const [snackBarOpened, setSnackBarOpened] = useState(false);\n  const [snackBarDateOpened, setsnackBarDateOpened] = useState(false);\n  const [snackBarLocationOpened, setsnackBarLocationOpened] = useState(false);\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pages, setPages] = useState([]);\n\n  const [isFuture, setFuture] = useState(true);\n\n  const [newBook, setNewBook] = useState('');\n  const [timeState, setTimeState] = useState(new Date());\n  const [dateState, setDateState] = useState(new Date());\n  const [newLocation, setNewLocation] = useState('');\n\n  const [vpWidth, setVPWidth] = useState(window.innerWidth);\n\n  const [dialogOpened, setDialogOpened] = useState(false);\n\n  const [toDash, setToDash] = useState(false);\n  const [toHome, setToHome] = useState(false);\n  const [toDiscuss, setToDiscuss] = useState(false);\n  const [toPoll, setToPoll] = useState(false);\n  const [toAdmin, setToAdmin] = useState(false);\n\n  const [isAdmin, setIsAdmin] = useState(false);\n\n  const useStyles = makeStyles((theme) => ({\n    fab: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    clubHomeView: {\n      paddingTop: 20,\n    },\n    forumLogo: {\n      width: 150,\n      height: 150,\n    },\n    content: {\n      width: (vpWidth - 240) * 0.8,\n    },\n    activityPaper: {\n      padding: theme.spacing(3, 2),\n      width: ((vpWidth - 240) * 0.8 - 8 * 5 * 3) / 3,\n    },\n    attend: {\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n      width: 100,\n    },\n    going: {\n      background: 'linear-gradient(45deg, #d3e7ee 0%, #abd1dc 100%)',\n      boxShadow: '0 3px 7px 1px rgba(197, 223, 231, .3)',\n      width: 100,\n    },\n    goBackFab: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n    addMeetingBtn: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 80,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n      color: 'black',\n    },\n  }));\n\n  const loopPages = (array) => {\n    const pageArray = [];\n    for (let i = 0; i < array.length; i += 1) {\n      pageArray[i] = (i + 1).toString();\n    }\n    setPages(pageArray);\n  };\n\n  const openSnackBar = () => {\n    setSnackBarOpened(true);\n  };\n\n  const closeSnackBar = () => {\n    setSnackBarOpened(false);\n  };\n\n  const snackBarDateOpenedFunc = () => {\n    setsnackBarDateOpened(true);\n  };\n\n\n  const closeSnackBarDateFunc = () => {\n    setsnackBarDateOpened(false);\n  };\n\n  const snackBarLocationOpenedFunc = () => {\n    setsnackBarLocationOpened(true);\n  };\n\n\n  const closeSnackBarLocationFunc = () => {\n    setsnackBarLocationOpened(false);\n  };\n\n\n  const dispMeetings = (meetingArray) => {\n    const array = [];\n    array.push([]);\n    let outer = 0;\n    let inner = 0;\n    for (let i = 0; i < meetingArray.length; i += 1) {\n      if (outer === 11) break;\n\n      if (inner === 6) {\n        outer += 1;\n        inner = 0;\n        array.push([]);\n      }\n\n      array[outer][inner] = meetingArray[i];\n      const time = array[outer][inner].Time.split('T');\n      const hours = time[1].split(':');\n      const timeStamp = `${time[0]} ${hours[0]}:${hours[1]}`;\n      array[outer][inner].TimeStamp = timeStamp;\n      inner += 1;\n    }\n\n    loopPages(array);\n    setMeetings(array);\n  };\n\n  // Style sheet.\n  const classes = useStyles();\n\n  const getMeetings = (time) => {\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_${time}_meetings`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        dispMeetings(response.data);\n      });\n  };\n\n  useEffect(() => {\n    function handleResize() {\n      setVPWidth(window.innerWidth);\n    }\n\n    getAdmin(clubId, userId, token, setIsAdmin);\n    getMeetings('future');\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const onNewBookChange = (e) => {\n    setNewBook(e.target.value);\n  };\n\n  const onNewDateChange = (e) => {\n    setDateState(e.target.value);\n  };\n\n  const onNewTimeChange = (e) => {\n    setTimeState(e);\n  };\n\n\n  const onNewLocationChange = (e) => {\n    setNewLocation(e.target.value);\n  };\n\n\n  const openDialog = () => {\n    setDialogOpened(true);\n  };\n\n  const attendEvent = (meeting, attendance) => {\n    const payload = {\n      Meeting_ID: meeting.Meeting_ID,\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/${attendance}_meeting`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        getMeetings('future');\n      });\n  };\n\n  const closeDialog = () => {\n    setDialogOpened(false);\n    setNewBook('');\n    setDateState(new Date());\n    setTimeState(new Date());\n    setNewLocation('');\n  };\n\n\n  const postMeeting = () => {\n    if (newBook === '') {\n      openSnackBar();\n      return;\n    }\n\n    if (typeof dateState === 'object' || timeState === 'object') {\n      snackBarDateOpenedFunc();\n      return;\n    }\n\n    if (newLocation === '') {\n      snackBarLocationOpenedFunc();\n      return;\n    }\n\n    const newDate = dateState.split('-').reverse().join('-');\n    const newTime = `${timeState.getHours().toString()}:${timeState.getMinutes().toString()}`;\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n      User_ID: userId,\n      Location: newLocation,\n      Title: newBook,\n      Time: `${newDate} ${newTime}`,\n    };\n\n    axios({\n      url: `${domain}/Homepage/create_meeting`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        getMeetings('future');\n        setFuture(true);\n      });\n\n    closeDialog();\n  };\n\n  const toDashboardView = () => {\n    setToDash(true);\n  };\n\n  const toHomeView = () => {\n    setToHome(true);\n  };\n\n  const toDiscussView = () => {\n    setToDiscuss(true);\n  };\n\n  const toPollView = () => {\n    setToPoll(true);\n  };\n\n  const toAdminView = () => {\n    setToAdmin(true);\n  };\n\n  const clickFuture = () => {\n    getMeetings('future');\n    setPageIndex(0);\n    setFuture(true);\n  };\n\n  const clickPrev = () => {\n    getMeetings('past');\n    setPageIndex(0);\n    setFuture(false);\n  };\n\n  const changeIndex = (index) => {\n    setPageIndex(index);\n  };\n\n  const deleteMeeting = async (ID, time) => {\n    const payload = {\n      User_ID: parseInt(userId, 10),\n      Meeting_ID: ID,\n    };\n\n    await axios({\n      url: `${domain}/Homepage/delete_meeting`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    });\n\n    await getMeetings(time);\n  };\n\n  return (\n    <div className={classes.clubHomeView}>\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={10}\n          className={classes.content}\n        >\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              spacing={5}\n              className={classes.content}\n            >\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toHomeView}>\n                  <HomeIcon className={classes.extendedIcon} />\n                    Home\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toDiscussView}>\n                  <ForumIcon className={classes.extendedIcon} />\n                  Discussion\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toPollView}>\n                  <PollIcon className={classes.extendedIcon} />\n                  Poll\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} style={{ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }}>\n                  <PeopleAltIcon className={classes.extendedIcon} />\n                  Meeting\n                </Fab>\n              </Grid>\n\n              {isAdmin ? (\n                <Grid item>\n                  <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toAdminView}>\n                    <SecurityIcon className={classes.extendedIcon} />\n                    Admin\n                  </Fab>\n                </Grid>\n              ) : (<></>)}\n            </Grid>\n          </Grid>\n\n          <Divider className={classes.content} />\n\n          <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"flex-end\" style={{ marginTop: 40 }}>\n            <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={clickFuture} style={isFuture ? ({ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }) : { color: 'default' }}>\n              <DonutLargeIcon className={classes.extendedIcon} />\n                Show Upcoming Meetings\n            </Fab>\n            <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={clickPrev} style={!isFuture ? ({ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }) : { color: 'default' }}>\n              <HistoryIcon className={classes.extendedIcon} />\n                Show Previous Meetings\n            </Fab>\n          </Grid>\n\n          <Grid item>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"flex-start\"\n              alignItems=\"flex-start\"\n              spacing={5}\n              className={classes.content}\n            >\n              <Grid item>\n                { isFuture ? <Typography variant=\"h3\">Upcoming Meetings</Typography> : <Typography variant=\"h3\">Previous Meetings</Typography>}\n              </Grid>\n              <Grid item>\n                {\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justify=\"flex-start\"\n                    alignItems=\"center\"\n                    spacing={5}\n                  >\n                    {\n                  meetings.length !== 0 && meetings[pageIndex].length !== 0 ? (\n                    meetings[pageIndex].map((meeting, index) => {\n                      return (\n                        <Grid key={index} item>\n                          <Paper className={classes.activityPaper}>\n                            <Grid\n                              container\n                              direction=\"column\"\n                              justify=\"space-between\"\n                              alignItems=\"flex-start\"\n                              spacing={1}\n                            >\n                              <Grid item>\n                                <Typography variant=\"h5\">\n                                  {meeting.Title}\n                                </Typography>\n\n                                <Typography variant=\"subtitle2\">\n                                  {meeting.TimeStamp}\n                                </Typography>\n\n                                <Typography variant=\"subtitle2\">\n                                  {`at ${meeting.Location}`}\n                                </Typography>\n                              </Grid>\n\n                              <Grid\n                                container\n                                justify=\"space-between\"\n                              >\n\n                                <Grid item>\n                                  {\n                                    isAdmin ? (\n                                      <Button\n                                        variant=\"contained\"\n                                        value={index}\n                                        onClick={() => deleteMeeting(meeting.Meeting_ID, isFuture ? 'future' : 'past')}\n                                      >\n                                        Remove\n                                      </Button>\n                                    )\n                                      : <div />\n                                  }\n                                </Grid>\n                                <Grid item>\n                                  {\n                                    isFuture ? (\n                                      <Grid item style={{ width: '100%' }}>\n                                        <Grid container justify=\"flex-end\">\n                                          {\n                                            meeting.user_attendance === 1 ? (\n                                              <Button\n                                                variant=\"contained\"\n                                                value={index}\n                                                onClick={() => attendEvent(meeting, 'unattend')}\n                                                className={classes.going}\n                                              >\n                                                <CheckIcon />\n                                              </Button>\n                                            ) : (\n                                              <Button\n                                                variant=\"contained\"\n                                                onClick={() => attendEvent(meeting, 'attend')}\n                                                value={index}\n                                                className={classes.attend}\n                                              >\n                                                Attend\n                                              </Button>\n                                            )\n                                          }\n\n                                        </Grid>\n                                      </Grid>\n                                    ) : (\n                                      <Grid item style={{ width: '100%' }}>\n                                        <Grid container justify=\"flex-end\">\n                                          {\n                                            meeting.user_attendance === 1 ? (\n                                              <Button variant=\"outlined\" disabled>\n                                                Attended\n                                              </Button>\n                                            ) : (\n                                              <Button variant=\"outlined\" disabled>\n                                                Did not Attend\n                                              </Button>\n                                            )\n                                          }\n                                        </Grid>\n                                      </Grid>\n                                    )\n                                }\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Paper>\n                        </Grid>\n                      );\n                    })\n                  )\n                    : <div />\n                }\n                  </Grid>\n                }\n              </Grid>\n\n              <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"center\" spacing={3}>\n                {pages.map((button, index) => (\n                  <Grid item>\n                    <Button variant=\"contained\" color={pageIndex === index ? 'primary' : 'default'} onClick={() => changeIndex(index)}>\n                      {button}\n                    </Button>\n                  </Grid>\n                ))}\n              </Grid>\n\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Fab variant=\"extended\" aria-label=\"Go Back\" className={classes.goBackFab} onClick={toDashboardView}>\n        <DashboardIcon className={classes.extendedIcon} />\n        Dashboard\n      </Fab>\n\n      {\n        isAdmin ? (\n          <Fab color=\"primary\" aria-label=\"add\" className={classes.addMeetingBtn} onClick={openDialog}>\n            <AddIcon />\n          </Fab>\n        )\n          : <div />\n      }\n      <Dialog open={dialogOpened} onClose={closeDialog}>\n        <DialogTitle>New Meeting</DialogTitle>\n        <DialogContent style={{ width: 800 }}>\n          <TextField\n            margin=\"dense\"\n            label=\"Book\"\n            type=\"text\"\n            value={newBook}\n            onChange={onNewBookChange}\n            fullWidth\n            style={{ width: 550 }}\n          />\n          <TextField\n            id=\"date\"\n            label=\"Meeting Date\"\n            type=\"date\"\n            defaultValue=\"2019-10-22\"\n            value={dateState}\n            onChange={onNewDateChange}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            style={{ width: 550 }}\n          />\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardTimePicker\n              clearable\n              id=\"time\"\n              ampm={false}\n              label=\"Meeting Time\"\n              defaultValue=\"00:00\"\n              value={timeState}\n              onChange={onNewTimeChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change time',\n              }}\n            />\n          </MuiPickersUtilsProvider>\n          <TextField\n            margin=\"dense\"\n            label=\"Location\"\n            type=\"text\"\n            value={newLocation}\n            onChange={onNewLocationChange}\n            fullWidth\n            style={{ width: 550 }}\n          />\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={postMeeting} color=\"primary\">\n            Reply\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        open={snackBarOpened}\n        onClose={closeSnackBar}\n        message={<span>Please enter Book title!</span>}\n      />\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        open={snackBarDateOpened}\n        onClose={closeSnackBarDateFunc}\n        message={<span>Please enter a date and time!</span>}\n      />\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        open={snackBarLocationOpened}\n        onClose={closeSnackBarLocationFunc}\n        message={<span>Please enter a location!</span>}\n      />\n\n      { toDash ? (<Redirect to=\"/dashboard\" />) : <div /> }\n      { toHome ? (<Redirect to={`/club/${clubId}`} />) : <div /> }\n      { toDiscuss ? (<Redirect to={`/club/${clubId}/discussion`} />) : <div /> }\n      { toPoll ? (<Redirect to={`/club/${clubId}/poll`} />) : <div /> }\n      { toAdmin && isAdmin ? (<Redirect to={`/club/${clubId}/admin`} />) : <div /> }\n    </div>\n  );\n}\n\n\nexport default MeetingView;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PollIcon from '@material-ui/icons/Poll';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\n\n\nimport getAdmin from '../api/getAdmin';\nimport domain from '../api/domain';\n\nimport { UserContext } from '../UserContext';\n\nfunction DiscussionThreadsView(props) {\n  // Get param from url.\n  const { clubId, discuzId, threadTitle } = useParams();\n\n  const { token, userId } = useContext(UserContext);\n\n  const [newContent, setNewContent] = useState('');\n\n  const [vpWidth, setVPWidth] = useState(window.innerWidth);\n\n  const [dialogOpened, setDialogOpened] = useState(false);\n\n  const [snackBarOpened, setSnackBarOpened] = useState(false);\n\n  const [toDiscuss, setToDiscuss] = useState(false);\n  const [toHome, setToHome] = useState(false);\n  const [toPoll, setToPoll] = useState(false);\n  const [toMeeting, setToMeeting] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [toAdmin, setToAdmin] = useState(false);\n\n  const [threads, setThreads] = useState([[]]);\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pages, setPages] = useState([]);\n\n  const [picture, setPicture] = useState('https://fun-group-bucket.s3-ap-southeast-2.amazonaws.com/blank-profile-picture.png');\n\n  const useStyles = makeStyles((theme) => ({\n    fab: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    clubHomeView: {\n      paddingTop: 20,\n    },\n    forumLogo: {\n      width: 150,\n      height: 150,\n    },\n    content: {\n      width: (vpWidth - 240) * 0.8,\n    },\n    activityPaper: {\n      padding: theme.spacing(3, 2),\n    },\n    goBackFab: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n    addComment: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 80,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n      color: 'black',\n    },\n    deleteDiscuz: {\n      margin: 0,\n      top: 'auto',\n      right: 'auto',\n      bottom: 20,\n      left: 20,\n      position: 'fixed',\n    },\n  }));\n\n\n  // Style sheet.\n  const classes = useStyles();\n\n  const openSnackBar = () => {\n    setSnackBarOpened(true);\n  };\n\n\n  const closeSnackBar = () => {\n    setSnackBarOpened(false);\n  };\n\n\n  const getClubName = () => {\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_single_bookclub`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        props.setViewName(response.data.Name)\n      });\n  };\n\n  const getUserName = () => {\n    const payload = {\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_user`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        setPicture(response.data.profile_pic);\n      });\n  };\n\n  useEffect(() => {\n    function handleResize() {\n      setVPWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    getUserName();\n    getClubName();\n  }, []);\n\n  const loopPages = (array) => {\n    const pageArray = [];\n    for (let i = 0; i < array.length; i += 1) {\n      pageArray[i] = (i + 1).toString();\n    }\n    setPages(pageArray);\n  };\n\n  const dispThreads = (threadArray) => {\n    const array = [];\n    array.push([]);\n    let outer = 0;\n    let inner = 0;\n    for (let i = 0; i < threadArray.length; i += 1) {\n      if (outer === 11) break;\n\n      if (inner === 5) {\n        outer += 1;\n        inner = 0;\n        array.push([]);\n      }\n\n      array[outer][inner] = threadArray[i];\n      const time = array[outer][inner].Time.split('T');\n      const hours = time[1].split(':');\n      const timeStamp = `${time[0]} ${hours[0]}:${hours[1]}`;\n      array[outer][inner].TimeStamp = timeStamp;\n      inner += 1;\n    }\n\n    loopPages(array);\n    setThreads(array);\n  };\n\n  const getThreads = () => {\n    const payload = {\n      Discussion_ID: parseInt(discuzId, 10),\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_discussion_threads`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        dispThreads(response.data.Threads);\n      });\n  };\n\n  // Life Cycle Hook. Executed when the view is mounted.\n  useEffect(() => {\n    getAdmin(clubId, userId, token, setIsAdmin);\n    getThreads();\n  }, []);\n\n\n  const onNewContentChange = (e) => {\n    setNewContent(e.target.value);\n  };\n\n  const openDialog = () => {\n    setDialogOpened(true);\n  };\n\n\n  const closeDialog = () => {\n    setDialogOpened(false);\n    setNewContent('');\n  };\n\n  const postComment = () => {\n    if (newContent === '') {\n      openSnackBar();\n      return;\n    }\n    const payload = {\n      User_ID: parseInt(userId, 10),\n      Discussion_ID: parseInt(discuzId, 10),\n      Content: newContent,\n    };\n\n    axios({\n      url: `${domain}/Homepage/post_reply`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        getThreads();\n      });\n\n    closeDialog();\n  };\n\n  const toDiscussView = () => {\n    setToDiscuss(true);\n  };\n\n  const toHomeView = () => {\n    setToHome(true);\n  };\n\n  const toPollView = () => {\n    setToPoll(true);\n  };\n\n  const toMeetingView = () => {\n    setToMeeting(true);\n  };\n\n  const toAdminView = () => {\n    setToAdmin(true);\n  };\n\n  const changeIndex = (index) => {\n    setPageIndex(index);\n  };\n\n  const deleteDiscussion = async () => {\n    const payload = {\n      User_ID: parseInt(userId, 10),\n      Discussion_ID: discuzId,\n    };\n\n    await axios({\n      url: `${domain}/Homepage/delete_discussion`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    });\n\n    await setToDiscuss(true);\n  };\n\n  const deleteThread = async (ID) => {\n    const payload = {\n      User_ID: parseInt(userId, 10),\n      Thread_ID: ID,\n    };\n\n    await axios({\n      url: `${domain}/Homepage/delete_thread`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    });\n\n    await getThreads();\n  };\n\n  return (\n    <div className={classes.clubHomeView}>\n\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={10}\n          className={classes.content}\n        >\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              spacing={5}\n              className={classes.content}\n            >\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toHomeView}>\n                  <HomeIcon className={classes.extendedIcon} />\n                    Home\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} style={{ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }} onClick={toDiscussView}>\n                  <ForumIcon className={classes.extendedIcon} />\n                  Discussion\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toPollView}>\n                  <PollIcon className={classes.extendedIcon} />\n                  Poll\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toMeetingView}>\n                  <PeopleAltIcon className={classes.extendedIcon} />\n                  Meeting\n                </Fab>\n              </Grid>\n\n              {isAdmin ? (\n                <Grid item>\n                  <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toAdminView}>\n                    <SecurityIcon className={classes.extendedIcon} />\n                    Admin\n                  </Fab>\n                </Grid>\n              ) : (<></>)}\n            </Grid>\n          </Grid>\n\n          <Divider className={classes.content} />\n\n          {\n            isAdmin ? (\n              <Fab variant=\"extended\" aria-label=\"delete\" className={classes.deleteDiscuz} onClick={deleteDiscussion}>\n                <HighlightOffIcon className={classes.extendedIcon} />\n              Delete Discussion\n              </Fab>\n            )\n              : <div />\n          }\n\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-start\"\n              spacing={2}\n              className={classes.content}\n            >\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"flex-start\"\n                  spacing={3}\n                >\n\n                  {\n                  threads[pageIndex].map((thread, index) => (\n                    <Grid item className={classes.content}>\n                      <Paper className={classes.activityPaper}>\n                        {\n                          index === 0 && pageIndex === 0 ? (\n                            <div>\n                              <Avatar alt=\"profile pic\" src={picture} style={{ marginBottom: 20 }} />\n\n                              <Typography variant=\"h3\">\n                                {threadTitle}\n                              </Typography>\n\n                              <Typography variant=\"subtitle1\" style={{ marginBottom: 20 }}>\n                                {' '}\n                              Originally Posted by\n                                {' '}\n                                {thread.User_ID.username}\n                                {' '}\n                                at\n                                {' '}\n                                {thread.TimeStamp}\n                              </Typography>\n                              <Typography variant=\"p\">{thread.Content}</Typography>\n                            </div>\n                          )\n                            : (\n                              <Grid\n                                container\n                                direction=\"row\"\n                                justify=\"space-between\"\n                                alignItems=\"center\"\n                              >\n\n                                <Grid item>\n                                  <Grid\n                                    container\n                                    direction=\"column\"\n                                    justify=\"space-between\"\n                                    alignItems=\"flex-start\"\n                                    spacing={1}\n                                  >\n                                    <Grid item>\n                                      <Avatar alt=\"profile pic\" src={thread.User_ID.profile_pic} style={{ marginBottom: 20 }} />\n                                    </Grid>\n\n                                    <Grid item>\n                                      <Typography variant=\"p\">\n                                        {thread.Content}\n                                      </Typography>\n                                    </Grid>\n\n                                    <Grid item>\n                                      <Grid item>\n                                        <Typography variant=\"p\">\n                                          Author:\n                                          {' '}\n                                          {thread.User_ID.username}\n                                        </Typography>\n                                      </Grid>\n\n                                      <Grid item>\n                                        <Typography variant=\"p\">\n                                          Date Posted:\n                                          {' '}\n                                          {thread.TimeStamp}\n                                        </Typography>\n                                      </Grid>\n                                    </Grid>\n                                  </Grid>\n                                </Grid>\n                                <Grid item>\n                                  {\n                                    isAdmin ? (\n                                      <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={() => deleteThread(thread.Thread_ID)}>\n                                        <HighlightOffIcon className={classes.extendedIcon} />\n                                        Remove\n                                      </Fab>\n                                    )\n                                      : <div />\n                                  }\n                                </Grid>\n                              </Grid>\n                            )\n                        }\n                      </Paper>\n                    </Grid>\n                  ))\n                }\n\n                  <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"center\" spacing={3}>\n                    {pages.map((button, index) => (\n                      <Grid item>\n                        <Button variant=\"contained\" color={pageIndex === index ? 'primary' : 'default'} onClick={() => changeIndex(index)}>\n                          {button}\n                        </Button>\n                      </Grid>\n                    ))}\n                  </Grid>\n\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Fab variant=\"extended\" aria-label=\"Go Back\" className={classes.goBackFab} onClick={toDiscussView}>\n        <ArrowBackIosIcon className={classes.extendedIcon} />\n        Go Back\n      </Fab>\n\n      <Fab color=\"primary\" aria-label=\"add\" className={classes.addComment} onClick={openDialog}>\n        <AddIcon />\n      </Fab>\n\n      <Dialog open={dialogOpened} onClose={closeDialog}>\n        <DialogTitle>Reply</DialogTitle>\n        <DialogContent style={{ width: 800 }}>\n          <TextField\n            label=\"Reply\"\n            multiline\n            rows=\"7\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ width: 550 }}\n            value={newContent}\n            onChange={onNewContentChange}\n            fullWidth\n          />\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={postComment} color=\"primary\">\n            Reply\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        open={snackBarOpened}\n        onClose={closeSnackBar}\n        message={<span>Empty Reply!</span>}\n      />\n      { toHome ? (<Redirect to={`/club/${clubId}`} />) : <div /> }\n      { toDiscuss ? (<Redirect to={`/club/${clubId}/discussion`} />) : <div /> }\n      { toPoll ? (<Redirect to={`/club/${clubId}/poll`} />) : <div /> }\n      { toMeeting ? (<Redirect to={`/club/${clubId}/meeting`} />) : <div /> }\n      { toAdmin && isAdmin ? (<Redirect to={`/club/${clubId}/admin`} />) : <div /> }\n    </div>\n  );\n}\n\n\nexport default DiscussionThreadsView;\n","import axios from 'axios';\nimport domain from './domain'\n\nconst login = (email, password, goToDashboardView, openSnackBar, toggleToken, setloggedIn) => {\n\n  var CryptoJS = require(\"crypto-js\");\n\n  const key = CryptoJS.enc.Utf8.parse(process.env.REACT_APP_FUN_CIPHER_KEY);\n  const iv = CryptoJS.enc.Utf8.parse(process.env.REACT_APP_FUN_CIPHER_IV);\n  const pwd = CryptoJS.AES.encrypt(password, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 })\n  const cipherpassword = pwd.toString();\n\n  axios.post(`${domain}/Homepage/login`, {\n    email: email,\n    password: cipherpassword,\n  })\n    .then((response) => {\n      toggleToken(response.data);\n      goToDashboardView();\n      setloggedIn(true);\n    })\n    .catch(() => {\n      openSnackBar();\n    });\n};\n\nexport default login;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Logo from '../logos/bookface.jpg';\n\nimport { UserContext } from '../UserContext';\n\nimport login from '../api/login';\nimport domain from '../api/domain';\n\nfunction RegisterView(props) {\n  const { toggleToken, setloggedIn } = useContext(UserContext);\n\n  // States\n  const [email, setEmail] = useState('');\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmedPassword, setConfirmedPassword] = useState('');\n  const [snackBarOpened, setSnackBarOpened] = useState(false);\n  const [toLogin, setToLogin] = useState(false);\n  const [toDash, settoDash] = useState(false);\n  const [regisFailOpened, setRegisFailOpened] = useState(false);\n\n  // Life Cycle Hook. Executed when the view is mounted.\n  useEffect(() => {\n    props.setViewName('Register');\n  }, []);\n\n\n  const goToLoginView = () => {\n    setToLogin(true);\n  };\n\n  const onEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onUserNameChange = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const onPasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onConfirmPasswordChange = (e) => {\n    setConfirmedPassword(e.target.value);\n  };\n\n  const goToDashboardView = () => {\n    settoDash(true);\n  };\n\n  const openSnackBar = () => {\n    setSnackBarOpened(true);\n  };\n\n  const closeSnackBar = () => {\n    setSnackBarOpened(false);\n  };\n\n  const openErrorMsg = () => {\n    setRegisFailOpened(true);\n  };\n\n  const closeErrorMsg = () => {\n    setRegisFailOpened(false);\n  };\n\n  const register = () => {\n    if (confirmedPassword !== password) {\n      openSnackBar();\n    } else {\n      const CryptoJS = require('crypto-js');\n\n      const key = CryptoJS.enc.Utf8.parse(process.env.REACT_APP_FUN_CIPHER_KEY);\n      const iv = CryptoJS.enc.Utf8.parse(process.env.REACT_APP_FUN_CIPHER_IV);\n\n      const pwd = CryptoJS.AES.encrypt(password, key,\n        { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 })\n\n      const cipherpassword = pwd.toString();\n\n      axios.post(`${domain}/Homepage/register`, {\n        username: userName,\n        email: email,\n        password: cipherpassword,\n      })\n        .then(() => {\n          login(email, password, goToDashboardView, null, toggleToken, setloggedIn);\n        })\n        .catch(() => {\n          openErrorMsg();\n        });\n    }\n  };\n\n  return (\n    <div className=\"RegisterView\">\n      <CssBaseline />\n\n      <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ marginTop: '3vh' }}>\n        <Grid item>\n          <Card style={{ width: 550, height: 710 }}>\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={2} style={{ marginTop: 35 }}>\n              <Grid item>\n                <img src={Logo} width='150' height='150'/>\n              </Grid>\n\n              <Grid item>\n                <TextField\n                  id=\"email\"\n                  label=\"Email\"\n                  className=\"textField\"\n                  value={email}\n                  onChange={onEmailChange}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  style={{ width: 400 }}\n                />\n              </Grid>\n\n              <TextField\n                id=\"userName\"\n                label=\"User Name\"\n                className=\"textField\"\n                value={userName}\n                onChange={onUserNameChange}\n                margin=\"normal\"\n                variant=\"outlined\"\n                style={{ width: 400 }}\n              />\n\n              <Grid item>\n                <TextField\n                  id=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  className=\"textField\"\n                  value={password}\n                  onChange={onPasswordChange}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  style={{ width: 400 }}\n                />\n              </Grid>\n\n              <Grid item>\n                <TextField\n                  id=\"confirmPassword\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  className=\"textField\"\n                  value={confirmedPassword}\n                  onChange={onConfirmPasswordChange}\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  style={{ width: 400 }}\n                />\n              </Grid>\n\n              <Grid item>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={register}\n                  style={{\n                    background: 'linear-gradient(45deg, #ff9190 0%, #fdc094 100%)',\n                    boxShadow: '0 3px 7px 1px rgba(255, 105, 135, .3)',\n                    width: 400,\n                  }}\n                >\n                  Join!\n                </Button>\n              </Grid>\n\n              <Grid item>\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={goToLoginView}\n                  style={{ width: 400 }}\n                >\n                  Already have an account? Login!\n                </Button>\n              </Grid>\n\n            </Grid>\n          </Card>\n        </Grid>\n      </Grid>\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={snackBarOpened}\n        onClose={closeSnackBar}\n        message={<span>Oh no! Passwords do not match.</span>}\n      />\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={regisFailOpened}\n        onClose={closeErrorMsg}\n        message={<span>Something went wrong.</span>}\n      />\n\n      { toLogin ? (<Redirect to=\"/login\" />) : <div /> }\n      { toDash ? (<Redirect to=\"/dashboard\" />) : <div /> }\n    </div>\n  );\n}\n\nexport default RegisterView;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/Button';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AddIcon from '@material-ui/icons/Add';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Avatar from '@material-ui/core/Avatar';\nimport { red } from '@material-ui/core/colors';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport List from '@material-ui/core/List';\nimport domain from '../api/domain';\n\n\nimport { UserContext } from '../UserContext';\n\nconst useStyles = makeStyles(() => ({\n\n  media: {\n    height: 60,\n    paddingTop: '70%', // 16:9\n  },\n\n  avatar: {\n    background: 'radial-gradient( circle farthest-corner at 10% 20%,  rgba(75,108,183,1) 0%, rgba(55,82,141,1) 90% )',\n  },\n\n  button: {\n    background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n    boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n  },\n\n  profilePic: {\n    marginLeft: 50,\n    marginRight: 80,\n    width: 80,\n    height: 80,\n  },\n\n  addClub: {\n    margin: 0,\n    top: 'auto',\n    right: 20,\n    bottom: 20,\n    left: 'auto',\n    position: 'fixed',\n    background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n    boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n  },\n\n}));\n\nfunction DashboardView(props) {\n  const { token, userId } = useContext(UserContext);\n\n  const classes = useStyles();\n  const fileInput = React.createRef();\n\n\n  // Life Cycle Hook. Executed when the view is mounted.\n  useEffect(() => {\n    props.setViewName('Dashboard')\n    props.history.length = 0\n  }, []);\n\n  const [toClub, redirectClub] = useState(false);\n\n  const [clubIndex, setClubIndex] = useState(0);\n\n  const [tags, setTags] = useState('');\n\n  const [pages, setPages] = useState([]);\n\n  const [pageIndex, setIndex] = useState(0);\n\n  const [clubs, setClubs] = useState([[]]);\n\n  const [dialogOpened, setDialogOpened] = useState(false);\n\n  const [newName, setNewName] = useState('');\n\n  const [newTag, setNewTag] = useState('');\n\n  const [newTags, setNewTags] = useState([]);\n\n  const [picture, setPicture] = useState('https://fun-group-bucket.s3-ap-southeast-2.amazonaws.com/blank-profile-picture.png');\n\n  const [vpWidth, setVPWidth] = useState(window.innerWidth);\n\n  const [showPages, setShowPages] = useState(false);\n\n\n  useEffect(() => {\n    function handleResize() {\n      setVPWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const getClubs = async () => {\n      const payload = {\n        id: parseInt(userId, 10),\n      };\n\n      const response = await axios({\n        url: `${domain}/Homepage/get_book_clubs`,\n        method: 'post',\n        data: payload,\n        headers: { Authorization: `Token ${token}` },\n      });\n\n      const effect = [];\n      effect.push(response.data);\n\n      setClubs(effect);\n      setShowPages(false);\n    };\n\n    getClubs();\n  }, []);\n\n\n  const loopPages = (array) => {\n    const pageArray = [];\n    for (let i = 0; i < array.length; i += 1) {\n      pageArray[i] = (i + 1).toString();\n    }\n    setPages(pageArray);\n  };\n\n  const dispClubs = (clubArray) => {\n    const array = [];\n    array.push([]);\n    let outer = 0;\n    let inner = 0;\n    for (let i = 0; i < clubArray.length; i += 1) {\n      if (outer === 11) break;\n      array[outer][inner] = clubArray[i];\n      inner += 1;\n      if (inner === 6) {\n        outer += 1;\n        inner = 0;\n        array.push([]);\n      }\n    }\n\n    console.log(array);\n\n    loopPages(array);\n    setClubs(array);\n  };\n\n  const searchClubs = async (tagString) => {\n    setIndex(0);\n\n    if (tagString === '') {\n      const getClubs = async () => {\n        const payload = {\n          id: parseInt(userId, 10),\n        };\n\n        const response = await axios({\n          url: `${domain}/Homepage/get_book_clubs`,\n          method: 'post',\n          data: payload,\n          headers: { Authorization: `Token ${token}` },\n        });\n\n        const effect = [];\n        effect.push(response.data);\n\n        setClubs(effect);\n        setShowPages(false);\n      };\n\n      getClubs();\n    } else {\n      const tagArray = tagString.split(',');\n      for (let i = 0; i < tagArray.length; i += 1) tagArray[i] = tagArray[i].trim(' ');\n\n      const payload = {\n        Tags: tagArray,\n      };\n\n      const response = await axios({\n        url: `${domain}/Homepage/search_book_clubs`,\n        method: 'post',\n        data: payload,\n        headers: { Authorization: `Token ${token}` },\n      });\n\n      dispClubs(response.data);\n      setShowPages(true);\n    }\n  };\n\n  const changeIndex = (index) => {\n    setIndex(index);\n  };\n\n  const onSearchBarChange = (e) => {\n    setTags(e.target.value);\n  };\n\n  const goToClub = (ID) => {\n    setClubIndex(ID);\n    redirectClub(true);\n  };\n\n  const onNewNameChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const onNewTagChange = (e) => {\n    setNewTag(e.target.value);\n  };\n\n  const onAddTagChange = () => {\n    const dupNewTags = newTags;\n    dupNewTags.push(newTag);\n\n    setNewTags(dupNewTags);\n    setNewTag('');\n  };\n\n  const openDialog = () => {\n    setDialogOpened(true);\n  };\n\n\n  const closeDialog = () => {\n    setDialogOpened(false);\n    setNewName('');\n    setNewTag('');\n    setNewTags([]);\n  };\n\n  const postClub = () => {\n    const payload = {\n      Name: newName,\n      Profile_Pic: picture,\n      Tags: newTags,\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/create_book_club`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        const clubTags = newTags.join(', ');\n        searchClubs(clubTags);\n      });\n\n    closeDialog();\n  };\n\n  const showPic = ({ target }) => {\n    const fileReader = new FileReader();\n    const file = target.files[0];\n\n    fileReader.onload = (function () {\n      return function (e) {\n        setPicture(e.target.result);\n      };\n    }(file));\n\n    // Read in the image file as a data URL.\n    fileReader.readAsDataURL(file);\n  };\n\n  // Render the view.\n  return (\n    <div className=\"DashBoardView\">\n      <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\" spacing={2} style={{ marginTop: 40 }}>\n        <Grid item>\n          <TextField\n            id=\"searchbar\"\n            label=\"Search by Tag\"\n            className=\"searchbar\"\n            margin=\"normal\"\n            onChange={onSearchBarChange}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter') {\n                searchClubs(tags);\n              }\n            }}\n            variant=\"outlined\"\n            InputProps={{\n              style: { fontSize: 20 },\n            }}\n            InputLabelProps={{\n              style: { fontSize: 25 },\n            }}\n            style={{ width: 600 }}\n          />\n        </Grid>\n\n        <Grid item>\n          <IconButton\n            variant=\"contained\"\n            color=\"default\"\n            onClick={() => searchClubs(tags)}\n            style={{\n              width: 50,\n              height: 60,\n              marginTop: 5,\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon />\n          </IconButton>\n        </Grid>\n      </Grid>\n\n\n\n      <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={3} style={{ marginTop: 30 }}>\n        <Grid item>\n          <Grid container justify=\"flex-start\" style={{ width: (vpWidth - 240) * 0.9 }}>\n            <Typography variant=\"h3\">\n              { showPages ? \"Search Results\" : \"My Favourite Clubs\" }\n            </Typography>\n          </Grid>\n        </Grid>\n\n        <Grid style={{ width: (vpWidth - 240) * 0.9 }}>\n          <List>\n            <Grid container direction=\"row\" alignItems=\"space-evenly\" justify=\"center\" spacing={3}>\n              {clubs[pageIndex].map((club) => (\n                <Grid item>\n                  <ButtonBase onClick={() => goToClub(club.BookClub_ID)}>\n                    <Card style={{ width: 340, height: 300 }}>\n                      <CardActionArea>\n                        <CardHeader\n                          avatar={(\n                            <Avatar aria-label=\"BookClub\" className={classes.avatar}>\n                              {club.Name.charAt(0)}\n                            </Avatar>\n                            )}\n\n                          title={(\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                              {club.Name}\n                            </Typography>\n                          )}\n                        />\n                        <CardMedia\n                          className={classes.media}\n                          image={club.Profile_Pic}\n                        />\n                      </CardActionArea>\n                    </Card>\n                  </ButtonBase>\n                </Grid>\n              ))}\n            </Grid>\n          </List>\n        </Grid>\n\n\n      </Grid>\n      <List>\n        <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"center\" spacing={3} style={{ marginTop: 30 }}>\n          {showPages ? (pages.map((button, index) => (\n            <Grid item>\n              <Button variant=\"contained\" color={pageIndex === index ? 'primary' : 'default'} onClick={() => changeIndex(index)}>\n                {button}\n              </Button>\n            </Grid>\n          )))\n            : <div />}\n        </Grid>\n      </List>\n\n      <Dialog open={dialogOpened} onClose={closeDialog}>\n        <DialogTitle>New Club</DialogTitle>\n        <DialogContent style={{ width: 800 }}>\n\n          <Grid item>\n            <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={5} className={classes.content}>\n              <Grid item>\n                <Avatar alt=\"profile pic\" src={picture} className={classes.profilePic} />\n              </Grid>\n\n              <Grid item spacing={4}>\n                <input\n                  accept=\"image/*\"\n                  className={classes.input}\n                  style={{ display: 'none' }}\n                  id=\"raised-button-file\"\n                  type=\"file\"\n                  multiple={false}\n                  onChange={showPic}\n                  ref={fileInput}\n                />\n                <label htmlFor='raised-button-file'>\n                  <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                    Upload profile picture\n                  </Button>\n                </label>\n                <p style={{ marginLeft: '1vh' }}>\n                Support file type: jpg, jpeg, png\n                </p>\n\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={1}\n          >\n            <Grid item>\n              <TextField\n                margin=\"dense\"\n                label=\"Name\"\n                type=\"text\"\n                value={newName}\n                onChange={onNewNameChange}\n                fullWidth\n                style={{ width: 550 }}\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                margin=\"dense\"\n                label=\"Tag\"\n                type=\"text\"\n                value={newTag}\n                onChange={onNewTagChange}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    onAddTagChange();\n                  }\n                }\n              }\n                fullWidth\n                style={{ width: 550 }}\n              />\n            </Grid>\n\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\" onClick={onAddTagChange} className={classes.margin}>\n                <AddIcon fontSize=\"inherit\" />\n              </Button>\n            </Grid>\n\n            <Grid item>\n              {\n                newTags.map((tag, index) => (\n                  <Typography>\n                    {`${index}. ${tag}`}\n                  </Typography>\n                ))\n              }\n            </Grid>\n          </Grid>\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={postClub} color=\"primary\">\n            Post\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Fab className={classes.addClub} onClick={openDialog}>\n        <AddIcon />\n      </Fab>\n\n      { toClub ? (<Redirect to={`/club/${clubIndex}`} />) : <div /> }\n    </div>\n\n  );\n}\n\n\nexport default withRouter(DashboardView);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Card from '@material-ui/core/Card';\nimport Logo from '../logos/bookface.jpg';\nimport { UserContext } from '../UserContext';\n\nimport login from '../api/login';\n\n\nfunction LoginView(props) {\n  const { setloggedIn } = useContext(UserContext);\n\n  // States\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [snackBarOpened, setSnackBarOpened] = useState(false);\n  const [toReg, setToReg] = useState(false);\n  const [toDash, setToDash] = useState(false);\n\n\n  // Life Cycle Hook. Executed when the view is mounted.\n  useEffect(() => {\n    props.setViewName('Login');\n  }, [props]);\n\n\n  const goToRegisterView = () => {\n    setToReg(true);\n  };\n\n\n  const goToDashboardView = () => {\n    setToDash(true);\n  };\n\n\n  const onEmailChange = (e) => {\n    setEmail(e.target.value);\n  };\n\n\n  const onPasswordChange = (e) => {\n    setPassword(e.target.value);\n  };\n\n\n  const openSnackBar = () => {\n    setSnackBarOpened(true);\n  };\n\n\n  const closeSnackBar = () => {\n    setSnackBarOpened(false);\n  };\n\n  return (\n    <div className=\"LoginView\">\n      <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" style={{ marginTop: '15vh' }}>\n        <Grid item>\n          <Card style={{ width: 550, height: 550 }}>\n            <Grid container direction=\"column\" alignItems=\"center\" justify=\"center\" spacing={2} style={{ marginTop: 40 }}>\n              <Grid item>\n                <img src={Logo} width='150' height='150'/>\n              </Grid>\n              <Grid item>\n                <UserContext.Consumer>\n                  {({ toggleToken }) => (\n                    <TextField\n                      id=\"email\"\n                      label=\"Email\"\n                      className=\"textField\"\n                      value={email}\n                      onChange={onEmailChange}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                          login(email, password, goToDashboardView, openSnackBar,\n                            toggleToken, setloggedIn);\n                        }\n                      }}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      style={{ width: 400 }}\n                    />\n                  )}\n                </UserContext.Consumer>\n              </Grid>\n              <Grid item>\n                <UserContext.Consumer>\n                  {({ toggleToken }) => (\n                    <TextField\n                      id=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      className=\"textField\"\n                      value={password}\n                      onChange={onPasswordChange}\n                      onKeyPress={(e) => {\n                        if (e.key === 'Enter') {\n                          login(email, password, goToDashboardView, openSnackBar,\n                            toggleToken, setloggedIn);\n                        }\n                      }}\n                      margin=\"normal\"\n                      variant=\"outlined\"\n                      style={{ width: 400 }}\n                    />\n                  )}\n                </UserContext.Consumer>\n              </Grid>\n              <Grid item>\n                <UserContext.Consumer>\n                  {({ toggleToken }) => (\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => {\n                        login(email, password, goToDashboardView, openSnackBar,\n                          toggleToken, setloggedIn);\n                      }}\n                      style={{\n                        background: 'linear-gradient(45deg, #ff9190 0%, #fdc094 100%)',\n                        boxShadow: '0 3px 7px 1px rgba(255, 105, 135, .3)',\n                        width: 280,\n                        marginRight: 20,\n                      }}\n                    >\n                      Login!\n                    </Button>\n                  )}\n                </UserContext.Consumer>\n\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  onClick={goToRegisterView}\n                  style={{ width: 100 }}\n                >\n                  Register\n                </Button>\n              </Grid>\n\n            </Grid>\n          </Card>\n        </Grid>\n      </Grid>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={snackBarOpened}\n        onClose={closeSnackBar}\n        message={<span>Invalid login!</span>}\n      />\n\n      { toReg ? (<Redirect to=\"/register\" />) : <div /> }\n      { toDash ? (<Redirect to=\"/dashboard\" />) : <div /> }\n    </div>\n\n  );\n}\n\nexport default LoginView;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect, useParams, withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PollIcon from '@material-ui/icons/Poll';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\n\nimport getAdmin from '../api/getAdmin';\nimport domain from '../api/domain';\n\nimport { UserContext } from '../UserContext';\n\nfunction ClubHomeView(props) {\n  // Get param from url.\n  const { clubId } = useParams();\n\n  const { token, userId } = useContext(UserContext);\n\n  const [titles, setTitles] = useState([]);\n  const [activities, setActivities] = useState([]);\n\n  const [vpWidth, setVPWidth] = useState(window.innerWidth);\n\n  const [toDash, setToDash] = useState(false);\n  const [toDiscuss, setToDiscuss] = useState(false);\n  const [toPoll, setToPoll] = useState(false);\n  const [toMeeting, setToMeeting] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [toAdmin, setToAdmin] = useState(false);\n\n  const [clubName, setClubName] = useState('');\n  const [useClubId, setUseClubName] = useState(clubId);\n  const [isOpen, setIsOpen] = useState(false);\n\n\n  const [inClub, setInClub] = useState(false);\n\n  const [picture, setPicture] = useState('https://fun-group-bucket.s3-ap-southeast-2.amazonaws.com/blank-profile-picture.png');\n\n  const [snackBarOpened, setSnackBarOpened] = useState(false);\n\n  const useStyles = makeStyles((theme) => ({\n    fab: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    clubHomeView: {\n      paddingTop: 20,\n    },\n    forumLogo: {\n      width: 150,\n      height: 150,\n    },\n    content: {\n      width: (vpWidth - 240) * 0.8,\n    },\n    activityPaper: {\n      padding: theme.spacing(3, 2),\n    },\n    goBackFab: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n  }));\n\n\n  // Style sheet.\n  const classes = useStyles();\n\n\n  useEffect(() => {\n    function handleResize() {\n      setVPWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    const fetch = async () => {\n      const payload = {\n        BookClub_ID: parseInt(clubId, 10),\n      };\n\n      let response = await axios({\n        url: `${domain}/Homepage/get_discussions`,\n        method: 'post',\n        data: payload,\n        headers: { Authorization: `Token ${token}` },\n      });\n\n      const rawDiscussions = response.data;\n\n      response = await axios({\n        url: `${domain}/Homepage/get_current_polls`,\n        method: 'post',\n        data: payload,\n        headers: { Authorization: `Token ${token}` },\n      });\n\n      const rawPolls = response.data;\n      const newTitles = [];\n      const newActivities = [];\n\n      for (let i = 0; i < Math.min(5, rawDiscussions.length); i += 1) {\n        newTitles.push(`New Discussion: ${rawDiscussions[i].Title}`);\n        newActivities.push(`Posted by ${rawDiscussions[i].User_ID.username}`);\n      }\n\n      for (let i = 0; i < Math.min(5, rawPolls.length); i += 1) {\n        newTitles.push(`New Poll: ${rawPolls[i].Title}`);\n        newActivities.push(`Ending by ${rawPolls[i].End_Time}`);\n      }\n\n      setTitles(newTitles);\n      setActivities(newActivities);\n    };\n\n    fetch();\n  }, []);\n\n  const getClubName = () => {\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_single_bookclub`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        props.setViewName(response.data.Name);\n        setPicture(response.data.Profile_Pic);\n        setClubName(response.data.Name);\n        setIsOpen(response.data.Open)\n      });\n  };\n\n  const isInClub = () => {\n    const payload = {\n      id: parseInt(userId, 10),\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_book_clubs`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        for (let i = 0; i < response.data.length; i += 1) {\n          if (response.data[i].BookClub_ID === parseInt(clubId, 10)) {\n            setInClub(true);\n            break;\n          }\n        }\n      });\n  };\n\n  // Life Cycle Hook. Executed when the view is mounted.\n  useEffect(() => {\n    getClubName();\n    isInClub();\n    getAdmin(clubId, userId, token, setIsAdmin);\n  }, []);\n\n  const toDashboardView = () => {\n    setToDash(true);\n  };\n\n  const toDiscussView = () => {\n    setToDiscuss(true);\n  };\n\n  const toPollView = () => {\n    setToPoll(true);\n  };\n\n  const toMeetingView = () => {\n    setToMeeting(true);\n  };\n\n  const toAdminView = () => {\n    setToAdmin(true);\n  };\n\n  const openSnackBar = () => {\n    setSnackBarOpened(true);\n  };\n\n  const joinClub = () => {\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/join_book_club`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        isInClub();\n      })\n      .catch(() => {\n        openSnackBar();\n      });\n  };\n\n  const leaveClub = () => {\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/leave_club`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        isInClub();\n      })\n      .catch(() => {\n        openSnackBar();\n      });\n\n    toDashboardView();\n  };\n\n  const closeSnackBar = () => {\n    setSnackBarOpened(false);\n  };\n\n  return (\n    <div className={classes.clubHomeView}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={10}\n          className={classes.content}\n        >\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              spacing={5}\n              className={classes.content}\n            >\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} style={{ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }}>\n                  <HomeIcon className={classes.extendedIcon} />\n                  Home\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toDiscussView}>\n                  <ForumIcon className={classes.extendedIcon} />\n                  Discussion\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toPollView}>\n                  <PollIcon className={classes.extendedIcon} />\n                  Poll\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toMeetingView}>\n                  <PeopleAltIcon className={classes.extendedIcon} />\n                  Meeting\n                </Fab>\n              </Grid>\n\n              {isAdmin ? (\n                <Grid item>\n                  <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toAdminView}>\n                    <SecurityIcon className={classes.extendedIcon} />\n                    Admin\n                  </Fab>\n                </Grid>\n              ) : (<></>)}\n            </Grid>\n          </Grid>\n\n          <Divider className={classes.content} />\n\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"flex-start\"\n              spacing={2}\n              className={classes.content}\n            >\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"row\"\n                  justify=\"flex-start\"\n                  alignItems=\"flex-start\"\n                  spacing={2}\n                  className={classes.content}\n                >\n                  <Grid item>\n                    <img src={picture} className={classes.forumLogo} />\n                  </Grid>\n\n                  <Grid item>\n                    <Typography variant=\"h3\">\n                      Welcome to\n                      {' '}\n                      {clubName}\n                      !\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n\n              <Grid item>\n                {\n                  !inClub && isOpen ? (\n                    <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={joinClub} style={{ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }}>\n                      <AddCircleIcon className={classes.extendedIcon} />\n                      Join club!\n                    </Fab>\n                  )\n                    : (\n                      inClub ? (\n                      <Fab variant=\"outlined\" aria-label=\"delete\" onClick={leaveClub}>\n                        <ExitToAppIcon className={classes.extendedIcon} />\n                        Leave club!\n                      </Fab>\n                      )\n                        : <div />\n                    )\n                }\n              </Grid>\n\n            </Grid>\n          </Grid>\n\n          <Divider className={classes.content} />\n\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-start\"\n              spacing={2}\n              className={classes.content}\n            >\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"flex-start\"\n                  spacing={3}\n                >\n                  <Grid item>\n                    <Typography variant=\"h3\">Activities</Typography>\n                  </Grid>\n\n                  {\n                    titles.map((title, index) => (\n                      <Grid item className={classes.content}>\n                        <Paper className={classes.activityPaper}>\n                          <Typography variant=\"h6\">\n                            {title}\n                          </Typography>\n                          <Typography component=\"p\">\n                            {activities[index]}\n                          </Typography>\n                        </Paper>\n                      </Grid>\n                    ))\n                  }\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Fab variant=\"extended\" aria-label=\"Go Back\" className={classes.goBackFab} onClick={toDashboardView}>\n        <DashboardIcon className={classes.extendedIcon} />\n        Dashboard\n      </Fab>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        open={snackBarOpened}\n        onClose={closeSnackBar}\n        message={<span>Sorry, this club is closed to new members!</span>}\n      />\n      { toDash ? (<Redirect to=\"/dashboard\" />) : <div /> }\n      { toDiscuss ? (<Redirect to={`/club/${clubId}/discussion`} />) : <div /> }\n      { toPoll ? (<Redirect to={`/club/${clubId}/poll`} />) : <div /> }\n      { toMeeting ? (<Redirect to={`/club/${clubId}/meeting`} />) : <div /> }\n      { toAdmin && isAdmin ? (<Redirect to={`/club/${clubId}/admin`} />) : <div /> }\n      { clubId !== useClubId ? (<Redirect to={`/club/${clubId}`} />) : <div /> }\n    </div>\n  );\n}\n\n\nexport default withRouter(ClubHomeView);\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PollIcon from '@material-ui/icons/Poll';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\n\nimport getAdmin from '../api/getAdmin';\nimport domain from '../api/domain';\n\nimport { UserContext } from '../UserContext';\n\n\nfunction ClubDiscussionView(props) {\n  // Get param from url.\n  const { clubId } = useParams();\n\n  const { token, userId } = useContext(UserContext);\n  const [snackBarOpened, setSnackBarOpened] = useState(false);\n\n\n  const [vpWidth, setVPWidth] = useState(window.innerWidth);\n  const [dialogOpened, setDialogOpened] = useState(false);\n  const [newContent, setNewContent] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n  const [toDash, setToDash] = useState(false);\n  const [toHome, setToHome] = useState(false);\n  const [toPoll, setToPoll] = useState(false);\n  const [toMeeting, setToMeeting] = useState(false);\n  const [pages, setPages] = useState([]);\n  const [discussions, setDiscussions] = useState([[]]);\n  const [pageIndex, setPageIndex] = useState(0);\n  const [discussID, setDiscussID] = useState(0);\n  const [toThreads, setToThreads] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [toAdmin, setToAdmin] = useState(false);\n  const [updater, setUpdater] = useState(false);\n  const [title, setTitle] = useState(\"\");\n\n  const useStyles = makeStyles((theme) => ({\n    fab: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    clubHomeView: {\n      paddingTop: 20,\n    },\n    forumLogo: {\n      width: 150,\n      height: 150,\n    },\n    content: {\n      width: (vpWidth - 240) * 0.8,\n    },\n    activityPaper: {\n      padding: theme.spacing(3, 2),\n      background: 'white',\n      '&:hover': {\n        background: '#eeeeee',\n      },\n    },\n\n    goBackFab: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n    addDiscussion: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 80,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n      color: 'black',\n    },\n\n  }));\n\n\n  // Style sheet.\n  const classes = useStyles();\n\n\n  useEffect(() => {\n    function handleResize() {\n      setVPWidth(window.innerWidth);\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const openSnackBar = () => {\n    setSnackBarOpened(true);\n  };\n\n\n  const closeSnackBar = () => {\n    setSnackBarOpened(false);\n  };\n\n\n  const getClubName = async () => {\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n    };\n\n    // Load Club Name\n    const response = await axios({\n      url: `${domain}/Homepage/get_single_bookclub`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    });\n\n    props.setViewName(response.data.Name);\n  };\n\n  const loopPages = (array) => {\n    const pageArray = [];\n    for (let i = 0; i < array.length; i += 1) {\n      pageArray[i] = (i + 1).toString();\n    }\n    setPages(pageArray);\n  };\n\n  const dispDiscussions = async (clubArray) => {\n    const newDiscussions = [];\n    newDiscussions.push([]);\n\n    let outer = 0;\n    let inner = 0;\n\n    for (let i = 0; i < clubArray.length; i += 1) {\n      if (outer === 11) break;\n\n      if (inner === 4) {\n        outer += 1;\n        inner = 0;\n        newDiscussions.push([]);\n      }\n\n      newDiscussions[outer][inner] = clubArray[i];\n      const time = newDiscussions[outer][inner].Time.split('T');\n      const hours = time[1].split(':');\n      const timeStamp = `${time[0]} ${hours[0]}:${hours[1]}`;\n      newDiscussions[outer][inner].TimeStamp = timeStamp;\n\n      newDiscussions[outer][inner].content = '';\n\n      const response = await axios({\n        url: `${domain}/Homepage/get_discussion_threads`,\n        method: 'post',\n        data: {\n          Discussion_ID: parseInt(newDiscussions[outer][inner].Discussion_ID, 10),\n        },\n        headers: { Authorization: `Token ${token}` },\n      });\n\n      if (response.data.Threads.length > 1) {\n        newDiscussions[outer][inner].content = response.data.Threads[0].Content;\n      }\n\n      inner += 1;\n    }\n\n    loopPages(newDiscussions);\n    setDiscussions(newDiscussions);\n  };\n\n\n  const getDiscussions = async () => {\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n    };\n\n    const response = await axios({\n      url: `${domain}/Homepage/get_discussions`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    });\n\n    await dispDiscussions(response.data);\n  };\n\n\n  // Life Cycle Hook. Executed when the view is mounted.\n  useEffect(() => {\n    const fetch = async () => {\n      await getClubName();\n      await getAdmin(clubId, userId, token, setIsAdmin);\n      await getDiscussions();\n    };\n\n    fetch();\n  }, []);\n\n  const openDialog = () => {\n    setDialogOpened(true);\n  };\n\n  const closeDialog = () => {\n    setDialogOpened(false);\n    setNewContent('');\n    setNewTitle('');\n  };\n\n  const postDiscussion = async () => {\n    if (newTitle === '') {\n      openSnackBar();\n      return;\n    }\n    if (newContent === '') {\n      openSnackBar();\n      return;\n    }\n\n    const payload = {\n      Title: newTitle,\n      BookClub_ID: parseInt(clubId, 10),\n      User_ID: userId,\n      Content: newContent,\n    };\n\n    await axios({\n      url: `${domain}/Homepage/post_discussion`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        getDiscussions();\n      });\n\n    closeDialog();\n  };\n\n  const onNewContentChange = (e) => {\n    setNewContent(e.target.value);\n  };\n\n  const onNewTitleChange = (e) => {\n    setNewTitle(e.target.value);\n  };\n\n  const toDashboardView = () => {\n    setToDash(true);\n  };\n\n  const toHomeView = () => {\n    setToHome(true);\n  };\n\n  const toPollView = () => {\n    setToPoll(true);\n  };\n\n  const toMeetingView = () => {\n    setToMeeting(true);\n  };\n\n  const toAdminView = () => {\n    setToAdmin(true);\n  };\n\n  const changeIndex = (index) => {\n    setPageIndex(index);\n  };\n\n  const goToDiscussThreadView = (ID, threadTitle) => {\n    setDiscussID(ID);\n    setTitle(threadTitle);\n    setToThreads(true);\n  };\n\n  return (\n    <div className={classes.clubHomeView}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={10}\n          className={classes.content}\n        >\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              spacing={5}\n              className={classes.content}\n            >\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toHomeView}>\n                  <HomeIcon className={classes.extendedIcon} />\n                  Home\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} style={{ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }}>\n                  <ForumIcon className={classes.extendedIcon} />\n                  Discussion\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toPollView}>\n                  <PollIcon className={classes.extendedIcon} />\n                  Poll\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toMeetingView}>\n                  <PeopleAltIcon className={classes.extendedIcon} />\n                  Meeting\n                </Fab>\n              </Grid>\n\n              {isAdmin ? (\n                <Grid item>\n                  <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toAdminView}>\n                    <SecurityIcon className={classes.extendedIcon} />\n                    Admin\n                  </Fab>\n                </Grid>\n              ) : (<></>)}\n            </Grid>\n          </Grid>\n\n          <Divider className={classes.content} />\n\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"flex-start\"\n              alignItems=\"flex-start\"\n              spacing={2}\n              className={classes.content}\n            >\n              <Grid item>\n                <Grid\n                  container\n                  direction=\"column\"\n                  justify=\"flex-start\"\n                  alignItems=\"flex-start\"\n                  spacing={3}\n                >\n                  <Grid item>\n                    <Typography variant=\"h3\">Discussion</Typography>\n                  </Grid>\n\n                  {\n                    discussions[pageIndex].map((discussion) => (\n                      <Grid item className={classes.content}>\n                        <Paper className={classes.activityPaper}>\n                          <Grid\n                            container\n                            direction=\"row\"\n                            justify=\"space-between\"\n                            alignItems=\"center\"\n                            onClick={() => goToDiscussThreadView(discussion.Discussion_ID, discussion.Title)}\n                          >\n\n                            <Grid item>\n                              <Typography variant=\"h6\">\n                                {discussion.Title}\n                              </Typography>\n                            </Grid>\n\n                            <Grid item>\n                              <Grid item>\n                                <Typography variant=\"p\">\n                                  Author:\n                                  {' '}\n                                  {discussion.User_ID.username}\n                                </Typography>\n                              </Grid>\n\n                              <Grid item>\n                                <Typography variant=\"p\">\n                                  Date Posted:\n                                  {' '}\n                                  {discussion.TimeStamp}\n                                </Typography>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Paper>\n                      </Grid>\n                    ))\n                  }\n\n                  <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"center\" spacing={3}>\n                    {pages.map((button, index) => (\n                      <Grid item>\n                        <Button variant=\"contained\" color={pageIndex === index ? 'primary' : 'default'} onClick={() => changeIndex(index)}>\n                          {button}\n                        </Button>\n                      </Grid>\n                    ))}\n                  </Grid>\n\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Fab color=\"primary\" aria-label=\"add\" className={classes.addDiscussion} onClick={openDialog}>\n        <AddIcon />\n      </Fab>\n\n      <Fab variant=\"extended\" aria-label=\"Go Back\" className={classes.goBackFab} onClick={toDashboardView}>\n        <DashboardIcon className={classes.extendedIcon} />\n        Dashboard\n      </Fab>\n\n      <Dialog open={dialogOpened} onClose={closeDialog}>\n        <DialogTitle>New Discussion</DialogTitle>\n        <DialogContent style={{ width: 800 }}>\n          <TextField\n            margin=\"dense\"\n            label=\"Title\"\n            type=\"text\"\n            value={newTitle}\n            onChange={onNewTitleChange}\n            fullWidth\n            style={{ width: 550 }}\n          />\n\n          <TextField\n            label=\"Description\"\n            multiline\n            rows=\"7\"\n            margin=\"normal\"\n            variant=\"outlined\"\n            style={{ width: 550 }}\n            value={newContent}\n            onChange={onNewContentChange}\n            fullWidth\n          />\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={postDiscussion} color=\"primary\">\n            Post\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        open={snackBarOpened}\n        onClose={closeSnackBar}\n        message={<span>Empty Title or Description!</span>}\n      />\n      { toDash ? (<Redirect to=\"/dashboard\" />) : <div /> }\n      { toHome ? (<Redirect to={`/club/${clubId}`} />) : <div /> }\n      { toPoll ? (<Redirect to={`/club/${clubId}/poll`} />) : <div /> }\n      { toMeeting ? (<Redirect to={`/club/${clubId}/meeting`} />) : <div /> }\n      { toThreads ? (<Redirect to={`/club/${clubId}/discussion/${discussID}/${title}`} />) : <div /> }\n      { toAdmin && isAdmin ? (<Redirect to={`/club/${clubId}/admin`} />) : <div /> }\n    </div>\n  );\n}\n\n\nexport default ClubDiscussionView;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PollIcon from '@material-ui/icons/Poll';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport HistoryIcon from '@material-ui/icons/History';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\n\nimport getAdmin from '../api/getAdmin';\nimport domain from '../api/domain';\n\nimport { UserContext } from '../UserContext';\n\n\nfunction PollView() {\n  // Get param from url.\n  const { clubId } = useParams();\n\n  const { token, userId } = useContext(UserContext);\n\n  const [polls, setPolls] = useState({ Polls: [[]], Options: [[]] });\n  const [snackBarOpened, setSnackBarOpened] = useState(false);\n  const [snackBarDateOpened, setsnackBarDateOpened] = useState(false);\n  const[snackBarChoiceOpened, setsnackBarChoiceOpened] = useState(false);\n  // Somehow react doesn't recognise the update on \"attendings\", this is used to update rendering.\n  const [updater, setUpdater] = useState(false);\n\n  const [newPolls, setNewPolls] = useState([]);\n  const [newTitle, setNewTitle] = useState('');\n  const [newOption, setNewOption] = useState('');\n  const [dateState, setDateState] = useState(new Date());\n  const [vpWidth, setVPWidth] = useState(window.innerWidth);\n\n  const [dialogOpened, setDialogOpened] = useState(false);\n\n  const [toDash, setToDash] = useState(false);\n  const [toHome, setToHome] = useState(false);\n  const [toDiscuss, setToDiscuss] = useState(false);\n  const [toMeeting, setToMeeting] = useState(false);\n\n  const [pageIndex, setPageIndex] = useState(0);\n  const [pages, setPages] = useState([]);\n\n  const [isCurrent, setCurrent] = useState(true);\n  const [isPrev, setPrev] = useState(false);\n\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [toAdmin, setToAdmin] = useState(false);\n\n  const useStyles = makeStyles((theme) => ({\n    fab: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    clubHomeView: {\n      paddingTop: 20,\n    },\n    forumLogo: {\n      width: 150,\n      height: 150,\n    },\n    content: {\n      width: (vpWidth - 240) * 0.8,\n    },\n    attend: {\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n      width: 100,\n    },\n    activityPaper: {\n      padding: theme.spacing(3, 2),\n    },\n    going: {\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n    goBackFab: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n    addMeetingBtn: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 80,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n      color: 'black',\n    },\n  }));\n\n  // Style sheet.\n  const classes = useStyles();\n\n  const openSnackBar = () => {\n    setSnackBarOpened(true);\n  };\n\n\n  const closeSnackBar = () => {\n    setSnackBarOpened(false);\n  };\n\n  const snackBarDateOpenedFunc = () => {\n    setsnackBarDateOpened(true);\n  };\n\n\n  const closeSnackBarDateFunc = () => {\n    setsnackBarDateOpened(false);\n  };\n\n  const openSnackBarChoice = () => {\n    setsnackBarChoiceOpened(true);\n  }\n\n  const closeSnackBarChoice = () => {\n    setsnackBarChoiceOpened(false);\n  }\n\n  const loopPages = (array) => {\n    const pageArray = [];\n    for (let i = 0; i < array.length; i += 1) {\n      pageArray[i] = (i + 1).toString();\n    }\n    setPages(pageArray);\n  };\n\n  const getOptions = (pArray, pollArray) => {\n    const array = [];\n    let index = 0;\n\n    for (let i = 0; i < pArray.length; i += 1) {\n      array.push([]);\n      for (let j = 0; j < 4; j += 1) {\n        if (index >= pollArray.length) break;\n        array[i].push([]);\n\n        const poll = pollArray[index].Poll_ID;\n        index += 1;\n\n        const payload = {\n          Poll_ID: parseInt(poll, 10),\n          User_ID: userId,\n        };\n\n        axios({\n          url: `${domain}/Homepage/get_poll_info`,\n          method: 'post',\n          data: payload,\n          headers: { Authorization: `Token ${token}` },\n        })\n          .then((response) => {\n            for (let k = 0; k < response.data.length; k += 1) {\n              array[i][j][k] = response.data[k];\n              array[i][j][k].Checked = array[i][j][k].user_vote !== 0;\n            }\n          });\n      }\n      setUpdater(!updater);\n    }\n    setPolls({ Polls: pArray, Options: array });\n  };\n\n  const dispPolls = (pollArray) => {\n    const array = [];\n    array.push([]);\n    let outer = 0;\n    let inner = 0;\n    for (let i = 0; i < pollArray.length; i += 1) {\n      if (outer === 11) break;\n\n      if (inner === 4) {\n        outer += 1;\n        inner = 0;\n        array.push([]);\n      }\n\n      pollArray[i].showOptions = false;\n      array[outer][inner] = pollArray[i];\n      inner += 1;\n    }\n\n    loopPages(array);\n    getOptions(array, pollArray);\n  };\n\n  const getPolls = (time) => {\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_${time}_polls`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        dispPolls(response.data);\n      });\n  };\n\n  useEffect(() => {\n    function handleResize() {\n      setVPWidth(window.innerWidth);\n    }\n\n    getAdmin(clubId, userId, token, setIsAdmin);\n    getPolls('current');\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const onNewTitleChange = (e) => {\n    setNewTitle(e.target.value);\n  };\n\n  const onNewOptionChange = (e) => {\n    setNewOption(e.target.value);\n  };\n\n  const onNewDateChange = (e) => {\n    setDateState(e.target.value);\n  };\n\n  const onAddOptionChange = () => {\n    const dupNewPolls = newPolls;\n    dupNewPolls.push(newOption);\n\n    setNewPolls(dupNewPolls);\n    setNewOption('');\n    setUpdater(!updater);\n  };\n\n  const votePoll = (poll, option) => {\n    const payload = {\n      Poll_ID: poll.Poll_ID,\n      Choice_ID: option.Choice_ID,\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/vote_poll`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        getPolls('current');\n      });\n  };\n\n  const submitPoll = (poll, options) => {\n    const payload = {\n      User_ID: userId,\n      Poll_ID: poll.Poll_ID,\n    };\n\n    axios({\n      url: `${domain}/Homepage/delete_vote`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        let noneChecked = true;\n        for (let i = 0; i < options.length; i += 1) {\n          if (options[i].Checked) {\n            noneChecked = false;\n            votePoll(poll, options[i]);\n          }\n        }\n        if (noneChecked) getPolls('current');\n      });\n  };\n\n  const onSelectChange = (option) => {\n    option.Checked = !option.Checked;\n    setUpdater(!updater);\n  };\n\n\n  const openDialog = () => {\n    setDialogOpened(true);\n  };\n\n\n  const closeDialog = () => {\n    setDialogOpened(false);\n    setNewTitle('');\n    setNewOption('');\n    setDateState(new Date());\n    setNewPolls([]);\n  };\n\n  const postPolls = () => {\n\n    if (newTitle === '') {\n      openSnackBar();\n      return;\n    }\n\n    if (typeof dateState === 'object') {\n      snackBarDateOpenedFunc();\n      return;\n    }\n    if (newPolls.length < 2) {\n      openSnackBar();\n      return;\n    }\n    let i;\n    for (i = 0; i < newPolls.length; i += 1 ) {\n      if(newPolls[i] === '') {\n        openSnackBarChoice();\n        return;\n      }\n    }\n\n\n    const newDate = dateState.split('-').reverse().join('-');\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n      User_ID: userId,\n      Time: `${newDate} 00:00:00`,\n      Title: newTitle,\n      Choices: newPolls,\n    };\n\n    axios({\n      url: `${domain}/Homepage/create_poll`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        getPolls('current');\n        setCurrent(true);\n        setPrev(false);\n      });\n\n    closeDialog();\n  };\n\n  const toDashboardView = () => {\n    setToDash(true);\n  };\n\n  const toHomeView = () => {\n    setToHome(true);\n  };\n\n  const toDiscussView = () => {\n    setToDiscuss(true);\n  };\n\n  const toMeetingView = () => {\n    setToMeeting(true);\n  };\n\n  const toAdminView = () => {\n    setToAdmin(true);\n  };\n\n  const clickCurrent = () => {\n    setUpdater(!updater);\n    setPrev(false);\n    getPolls('current');\n    setPageIndex(0);\n    setCurrent(true);\n  };\n\n  const clickPrev = () => {\n    setCurrent(false);\n    getPolls('past');\n    setPageIndex(0);\n    setPrev(true);\n  };\n\n  const changeIndex = (index) => {\n    setPageIndex(index);\n  };\n\n  const showOptions = (poll) => {\n    poll.showOptions = !poll.showOptions;\n    setUpdater(!updater);\n  };\n\n  const deletePoll = async (ID, time) => {\n    const payload = {\n      User_ID: parseInt(userId, 10),\n      Poll_ID: ID,\n    };\n\n    await axios({\n      url: `${domain}/Homepage/delete_poll`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    });\n\n    await getPolls(time);\n  };\n\n  return (\n    <div className={classes.clubHomeView}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={10}\n          className={classes.content}\n        >\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              spacing={1}\n              className={classes.content}\n            >\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toHomeView}>\n                  <HomeIcon className={classes.extendedIcon} />\n                    Home\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toDiscussView}>\n                  <ForumIcon className={classes.extendedIcon} />\n                  Discussion\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} style={{ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }}>\n                  <PollIcon className={classes.extendedIcon} />\n                  Poll\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toMeetingView}>\n                  <PeopleAltIcon className={classes.extendedIcon} />\n                  Meeting\n                </Fab>\n              </Grid>\n\n              {isAdmin ? (\n                <Grid item>\n                  <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toAdminView}>\n                    <SecurityIcon className={classes.extendedIcon} />\n                    Admin\n                  </Fab>\n                </Grid>\n              ) : (<></>)}\n\n              <Grid item style={{ marginTop: 30 }}>\n                <Divider className={classes.content} />\n              </Grid>\n\n            </Grid>\n          </Grid>\n\n          <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"flex-end\" spacing=\"15vh\">\n            <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={clickCurrent} style={isCurrent ? ({ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }) : { color: 'default' }}>\n              <DonutLargeIcon className={classes.extendedIcon} />\n                View Current Polls\n            </Fab>\n            <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={clickPrev} style={isPrev ? ({ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }) : { color: 'default' }}>\n              <HistoryIcon className={classes.extendedIcon} />\n                View Previous Polls\n            </Fab>\n          </Grid>\n\n          <Grid item>\n            <Grid\n              container\n              direction=\"column\"\n              justify=\"flex-start\"\n              alignItems=\"flex-start\"\n              spacing={3}\n            >\n\n              {\n                (isCurrent || isPrev) ? (\n                  <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"flex-start\"\n                    alignItems=\"flex-start\"\n                    spacing={3}\n                  >\n                    <Grid item>\n                      {\n                        isCurrent ? (<Typography variant=\"h3\">Active Polls</Typography>) : (<Typography variant=\"h3\">Previous Polls</Typography>)\n                      }\n                    </Grid>\n                    {\n                  polls.Polls[pageIndex].map((poll, index) => (\n                    <Grid item className={classes.content}>\n                      <Paper className={classes.activityPaper}>\n                        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"flex-start\">\n                          <Grid item>\n                            <Grid\n                              container\n                              direction=\"column\"\n                              justify=\"space-between\"\n                              alignItems=\"flex-start\"\n                              spacing={1}\n                            >\n                              <Grid item>\n                                <Typography variant=\"h5\">\n                                  {poll.Title}\n                                </Typography>\n                              </Grid>\n\n                              <Grid item>\n                                <Typography variant=\"subtitle1\">\n                                  {isCurrent ? `Ends on ${poll.End_Time}` : `Ended on ${poll.End_Time}`}\n                                </Typography>\n                              </Grid>\n\n                              <Grid item>\n                                <Grid item>\n                                  <Grid\n                                    container\n                                    direction=\"column\"\n                                    justify=\"center\"\n                                    alignItems=\"flex-start\"\n                                  >\n\n                                    <Grid\n                                      container\n                                      direction=\"row\"\n                                      justify=\"space-between\"\n                                      alignItems=\"center\"\n                                      spacing={10}\n                                    >\n                                      <Grid item>\n                                        {\n                                      polls.Options[pageIndex].length !== 0 && poll.showOptions ? (\n                                        polls.Options[pageIndex][index].map((option, pIndex) => (\n\n                                          <Grid item>\n                                            {\n                                            isCurrent ? (\n                                              <Grid item>\n                                                <Checkbox\n                                                  checked={option.Checked}\n                                                  value={[index, pIndex]}\n                                                  onClick={() => onSelectChange(option)}\n                                                  color=\"primary\"\n                                                  inputProps={{\n                                                    'aria-label': 'secondary checkbox',\n                                                  }}\n                                                />\n                                                <Typography variant=\"p\">\n                                                  {option.Description}\n                                                </Typography>\n                                              </Grid>\n                                            )\n                                              : (\n                                                <Grid item>\n                                                  <Typography variant=\"p\">\n                                                    {`${option.Description}: ${option.vote_count} votes`}\n                                                  </Typography>\n                                                </Grid>\n                                              )\n                                          }\n                                          </Grid>\n                                        ))\n                                      )\n                                        : <div />\n                                  }\n                                      </Grid>\n                                      <Grid item>\n                                        {\n                                    poll.showOptions && isCurrent ? (\n                                      <Fab variant=\"extended\" onClick={() => submitPoll(poll, polls.Options[pageIndex][index])} style={{ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }}>\n                                        <NavigationIcon className={classes.extendedIcon} />\n                                      Vote!\n                                      </Fab>\n                                    )\n                                      : <div />\n                                  }\n                                      </Grid>\n                                    </Grid>\n                                  </Grid>\n                                  <Grid item>\n                                    <Button variant=\"outlined\" size=\"small\" onClick={() => showOptions(poll)}>\n                                      {isCurrent ? (poll.showOptions ? 'Hide Options' : 'Show Options') : (poll.showOptions ? 'Hide Results' : 'Show Results')}\n                                    </Button>\n                                  </Grid>\n                                </Grid>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                          <Grid item>\n                            <Grid item>\n                              {\n                                isAdmin ? (\n                                  <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={() => deletePoll(poll.Poll_ID, isCurrent ? 'current' : 'past')}>\n                                    <HighlightOffIcon className={classes.extendedIcon} />\n                                  Remove\n                                  </Fab>\n                                )\n                                  : <div />\n                              }\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Paper>\n                    </Grid>\n                  ))\n                }\n                  </Grid>\n                )\n                  : <div />\n              }\n            </Grid>\n          </Grid>\n          <Grid container direction=\"row\" alignItems=\"flex-start\" justify=\"center\" spacing={3}>\n            {pages.map((button, index) => (\n              <Grid item>\n                <Button variant=\"contained\" color={pageIndex === index ? 'primary' : 'default'} onClick={() => changeIndex(index)}>\n                  {button}\n                </Button>\n              </Grid>\n            ))}\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Fab variant=\"extended\" aria-label=\"Go Back\" className={classes.goBackFab} onClick={toDashboardView}>\n        <DashboardIcon className={classes.extendedIcon} />\n        Dashboard\n      </Fab>\n\n      {\n        isAdmin ? (\n          <Fab color=\"primary\" aria-label=\"add\" className={classes.addMeetingBtn} onClick={openDialog}>\n            <AddIcon />\n          </Fab>\n        )\n          : <div />\n      }\n      <Dialog open={dialogOpened} onClose={closeDialog}>\n        <DialogTitle>New Poll</DialogTitle>\n        <DialogContent style={{ width: 800 }}>\n\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"center\"\n            alignItems=\"flex-start\"\n            spacing={1}\n          >\n            <Grid item>\n              <TextField\n                margin=\"dense\"\n                label=\"Title\"\n                type=\"text\"\n                value={newTitle}\n                onChange={onNewTitleChange}\n                fullWidth\n                style={{ width: 550 }}\n              />\n            </Grid>\n            <TextField\n              id=\"date\"\n              label=\"End Date\"\n              type=\"date\"\n              defaultValue=\"2019-10-22\"\n              value={dateState}\n              onChange={onNewDateChange}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              style={{ width: 550 }}\n            />\n            <Grid item>\n              <TextField\n                margin=\"dense\"\n                label=\"Option\"\n                type=\"text\"\n                value={newOption}\n                onChange={onNewOptionChange}\n                onKeyPress={(e) => {\n                  if (e.key === 'Enter') {\n                    onAddOptionChange();\n                  }\n                }}\n                fullWidth\n                style={{ width: 550 }}\n              />\n            </Grid>\n\n            <Grid item>\n              <Button variant=\"contained\" color=\"primary\" onClick={onAddOptionChange} className={classes.margin}>\n                <AddIcon fontSize=\"inherit\" />\n              </Button>\n            </Grid>\n\n            <Grid item>\n              {\n                newPolls.map((poll, index) => (\n                  <Typography>\n                    {`${index}. ${poll}`}\n                  </Typography>\n                ))\n              }\n            </Grid>\n          </Grid>\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={postPolls} color=\"primary\">\n            Post\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        open={snackBarOpened}\n        onClose={closeSnackBar}\n        message={<span>Empty Title or Less than 2 choices!</span>}\n      />\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        open={snackBarDateOpened}\n        onClose={closeSnackBarDateFunc}\n        message={<span>Please enter a date!</span>}\n      />\n\n      <Snackbar\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n        open={snackBarChoiceOpened}\n        onClose={closeSnackBarChoice}\n        message={<span>Please do not enter empty choice!</span>}\n      />\n\n      { toDash ? (<Redirect to=\"/dashboard\" />) : <div /> }\n      { toHome ? (<Redirect to={`/club/${clubId}`} />) : <div /> }\n      { toDiscuss ? (<Redirect to={`/club/${clubId}/discussion`} />) : <div /> }\n      { toMeeting ? (<Redirect to={`/club/${clubId}/meeting`} />) : <div /> }\n      { toAdmin && isAdmin ? (<Redirect to={`/club/${clubId}/admin`} />) : <div /> }\n    </div>\n  );\n}\n\n\nexport default PollView;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport axios from 'axios';\n\n\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport Avatar from '@material-ui/core/Avatar';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ForumIcon from '@material-ui/icons/Forum';\nimport PollIcon from '@material-ui/icons/Poll';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport SecurityIcon from '@material-ui/icons/Security';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\n\n\nimport domain from '../api/domain';\nimport getAdmin from '../api/getAdmin';\n\nimport { UserContext } from '../UserContext';\n\n\nfunction ClubAdminView(props) {\n  // Get param from url.\n  const { clubId } = useParams();\n\n  const { token, userId } = useContext(UserContext);\n\n  const [vpWidth, setVPWidth] = useState(window.innerWidth);\n\n  const [toDash, setToDash] = useState(false);\n  const [toHome, setToHome] = useState(false);\n  const [toPoll, setToPoll] = useState(false);\n  const [toMeeting, setToMeeting] = useState(false);\n\n  const [toDiscuss, setToDiscuss] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [updater, setUpdater] = useState(false);\n  const [isOpenToNewMembers, setIsOpenToNewMembers] = useState(true);\n  const [isAdmin, setIsAdmin] = useState(true);\n\n  // for saving typing input:\n  const [nameTyping, setNameTyping] = useState('');\n  // display:\n\n  const [picture, setPicture] = useState('https://fun-group-bucket.s3-ap-southeast-2.amazonaws.com/blank-profile-picture.png');\n\n\n  const useStyles = makeStyles((theme) => ({\n    fab: {\n      margin: theme.spacing(1),\n    },\n    extendedIcon: {\n      marginRight: theme.spacing(1),\n    },\n    clubHomeView: {\n      paddingTop: 20,\n    },\n    forumLogo: {\n      width: 150,\n      height: 150,\n    },\n    content: {\n      width: (vpWidth - 240) * 0.8,\n    },\n    activityPaper: {\n      padding: theme.spacing(3, 2),\n      background: '#DCDCDC',\n      '&:hover': {\n        background: 'linear-gradient(45deg, #ff9190 0%, #fdc094 100%)',\n      },\n    },\n    button: {\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n\n    delButton: {\n      marginBottom: 40,\n    },\n\n    goBackFab: {\n      margin: 0,\n      top: 'auto',\n      right: 20,\n      bottom: 20,\n      left: 'auto',\n      position: 'fixed',\n      background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)',\n      boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)',\n    },\n\n    profilePic: {\n      margin: 12,\n      width: 150,\n      height: 150,\n    },\n\n  }));\n\n\n  // Style sheet.\n  const classes = useStyles();\n\n\n  useEffect(() => {\n    function handleResize() {\n      setVPWidth(window.innerWidth);\n    }\n\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const getClubName = () => {\n    const payload = {\n      BookClub_ID: parseInt(clubId, 10),\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_single_bookclub`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        props.setViewName(response.data.Name);\n        setPicture(response.data.Profile_Pic);\n        setIsOpenToNewMembers(response.data.Open);\n      });\n  };\n\n  // Life Cycle Hook. Executed when the view is mounted.\n  useEffect(() => {\n    getAdmin(clubId, userId, token, setIsAdmin);\n    getClubName();\n  }, []);\n\n  const toDashboardView = () => {\n    setToDash(true);\n  };\n\n  const toHomeView = () => {\n    setToHome(true);\n  };\n\n  const toPollView = () => {\n    setToPoll(true);\n  };\n  const toMeetingView = () => {\n    setToMeeting(true);\n  };\n\n  const toDiscussView = () => {\n    setToDiscuss(true);\n  };\n\n  const showPic = ({ target }) => {\n    const fileReader = new FileReader();\n\n    const file = target.files[0];\n\n    fileReader.onload = (function () {\n      return function (e) {\n        setPicture(e.target.result);\n      };\n    }(file));\n\n    // Read in the image file as a data URL.\n    fileReader.readAsDataURL(file);\n  };\n\n  const updatePic = () => {\n    const payload = {\n      Param_to_change: 'Logo',\n      New_value: picture,\n      BookClub_ID: clubId,\n      User_ID: userId,\n    };\n    axios({\n      url: `${domain}/Homepage/set_club`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        openDialog();\n      });\n  }\n\n  const openDialog = () => {\n    setOpen(true);\n  };\n\n  const closeDialog = () => {\n    setOpen(false);\n  };\n\n  const openConfirmDialog = () => {\n    setOpenConfirm(true);\n  };\n\n  const closeConfirmDialog = () => {\n    setOpenConfirm(false);\n  };\n\n  const onNameChange = (e) => {\n    setNameTyping(e.target.value);\n  };\n\n  const updateName = () => {\n    const payload = {\n      Param_to_change: 'Name',\n      New_value: nameTyping,\n      BookClub_ID: clubId,\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/set_club`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        getClubName();\n        openDialog();\n      });\n  };\n\n  const updateOpen = () => {\n    const payload = {\n      Param_to_change: 'Open',\n      New_value: isOpenToNewMembers,\n      BookClub_ID: clubId,\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/set_club`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        // TODO\n        openDialog();\n      });\n  };\n\n  const deleteClub = () => {\n    const payload = {\n      BookClub_ID: clubId,\n      User_ID: userId,\n    };\n\n    axios({\n      url: `${domain}/Homepage/delete_book_club`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then(() => {\n        toDashboardView();\n      });\n  };\n\n  const toggleIsOpenToNewMembers = () => {\n    setIsOpenToNewMembers(!isOpenToNewMembers);\n    setUpdater(!updater);\n  };\n\n  return (\n    <div className={classes.clubHomeView}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={10}\n          className={classes.content}\n        >\n          <Grid item>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n              spacing={5}\n              className={classes.content}\n            >\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toHomeView}>\n                  <HomeIcon className={classes.extendedIcon} />\n                  Home\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toDiscussView}>\n                  <ForumIcon className={classes.extendedIcon} />\n                    Discussion\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toPollView}>\n                  <PollIcon className={classes.extendedIcon} />\n                  Poll\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} onClick={toMeetingView}>\n                  <PeopleAltIcon className={classes.extendedIcon} />\n                  Meeting\n                </Fab>\n              </Grid>\n\n              <Grid item>\n                <Fab variant=\"extended\" aria-label=\"delete\" className={classes.fab} style={{ background: 'linear-gradient(45deg, #ffe5d8 0%, #ffcad4 100%)', boxShadow: '0 3px 7px 1px rgba(255, 212, 213, .3)' }}>\n                  <SecurityIcon className={classes.extendedIcon} />\n                  Admin\n                </Fab>\n              </Grid>\n\n            </Grid>\n          </Grid>\n\n          <Divider className={classes.content} />\n          <Grid item>\n            <Grid continer direction=\"column\" justify=\"flex-start\" alignItems=\"center\" spacing={4}>\n              <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={3} className={classes.content}>\n                <Grid item>\n                  <Typography variant=\"h3\">Admin settings</Typography>\n                </Grid>\n              </Grid>\n              <Card className={classes.card} style={{ marginTop: 30 }}>\n                <Grid item>\n                  <Grid container direction=\"column\" justify=\"flex-start\" alignItems=\"center\" spacing={2} className={classes.content} style={{ paddingTop: 30 }}>\n                    <Grid item>\n                      <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={8} className={classes.content}>\n                        <Grid item>\n                          <Avatar alt=\"profile pic\" src={picture} className={classes.profilePic} />\n                        </Grid>\n\n                        <Grid item spacing={4}>\n                          <label htmlFor=\"raised-button-file\">\n                            <input\n                              accept=\"image/*\"\n                              className={classes.input}\n                              style={{ display: 'none' }}\n                              id=\"raised-button-file\"\n                              type=\"file\"\n                              multiple={false}\n                              onChange={showPic}\n                            />\n                            <Button variant=\"raised\" component=\"span\" className={classes.button}>\n                                Upload profile picture\n                            </Button>\n                          </label>\n                          <p style={{ marginLeft: '1vh' }}>\n                            Support file type: jpg, jpeg, png\n                          </p>\n                          <Button onClick={updatePic} className={classes.button}>\n                            Confirm\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\n                    <Grid item>\n                      <TextField\n                        label=\"Club Name\"\n                        value={nameTyping}\n                        onChange={onNameChange}\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Button variant=\"contained\" onClick={updateName} className={classes.button}>\n                        Update Club Name\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\n                    <Grid item>\n                      <FormControlLabel\n                        control={\n                          <Switch checked={isOpenToNewMembers} onChange={toggleIsOpenToNewMembers} color=\"primary\" />\n                        }\n                        label=\"Open to new members\"\n                      />\n                    </Grid>\n                    <Grid item>\n                      <Button variant=\"contained\" onClick={updateOpen} className={classes.button}>\n                        Confirm\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n                <Grid item>\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={2}>\n\n                    <Grid item>\n                      <Button variant=\"outlined\" onClick={openConfirmDialog} className={classes.delButton} spacing={2}>\n                        DELETE\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n              </Card>\n            </Grid>\n\n          </Grid>\n        </Grid>\n\n        <Dialog\n          open={open}\n          onClose={closeDialog}\n        >\n          <DialogTitle>Details Updated</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              We have updated your details.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeDialog} color=\"primary\" autoFocus>\n              OK\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          open={openConfirm}\n          onClose={closeConfirmDialog}\n        >\n          <DialogTitle>Are you sure?</DialogTitle>\n\n          <DialogContent>\n            <DialogContentText>\n              This action can not be undone.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={deleteClub} color=\"primary\" autoFocus style={{ marginTop: '15vh' }}>\n                DELETE\n            </Button>\n            <Button onClick={closeConfirmDialog} color=\"primary\" autoFocus>\n              CANCEL\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n\n\n      <Fab variant=\"extended\" aria-label=\"Go Back\" className={classes.goBackFab} onClick={toDashboardView}>\n        <DashboardIcon className={classes.extendedIcon} />\n        Dashboard\n      </Fab>\n\n      { toDiscuss ? (<Redirect to={`/club/${clubId}/discussion`} />) : <div />}\n      { toDash ? (<Redirect to=\"/dashboard\" />) : <div /> }\n      { toHome ? (<Redirect to={`/club/${clubId}`} />) : <div /> }\n      { toPoll ? (<Redirect to={`/club/${clubId}/poll`} />) : <div /> }\n      { toMeeting ? (<Redirect to={`/club/${clubId}/meeting`} />) : <div /> }\n    </div>\n  );\n}\n\n\nexport default ClubAdminView;\n","import React from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\n\n\nfunction ClubRedirect() {\n  // Get param from url.\n  const { clubId } = useParams();\n\n  return (\n    <Redirect to={`/club/${clubId}`} />\n  );\n}\n\n\nexport default ClubRedirect;\n","import React, { useState, useEffect, useContext } from 'react';\nimport {\n  BrowserRouter as Router, Switch, Route, Redirect,\n} from 'react-router-dom';\nimport axios from 'axios';\n\n// Import UI Components.\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Grid from '@material-ui/core/Grid';\nimport AccountSettingView from './components/AccountSettingView';\nimport MeetingView from './components/MeetingView';\nimport DiscussionThreadsView from './components/DiscussionThreadsView';\nimport RegisterView from './components/RegisterView';\nimport DashboardView from './components/DashboardView';\nimport LoginView from './components/LoginView';\nimport ClubHomeView from './components/ClubHomeView';\nimport ClubDiscussionView from './components/ClubDiscussionView';\nimport PollView from './components/PollView';\nimport ClubAdminView from './components/ClubAdminView';\nimport ClubRedirect from './components/ClubRedirect';\n\n\nimport { UserContext } from './UserContext';\n\nimport domain from './api/domain';\n\n\nfunction App() {\n  // grab user dets from context\n  const {\n    token, toggleToken, loggedIn, setloggedIn, userId,\n  } = useContext(UserContext);\n\n  // States.\n  const [toAccount, setToAccount] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [openedWidth, setOpenedWidth] = useState(0);\n  const [clubIndex, setClubIndex] = useState(0);\n  const [clubs, setClubs] = useState([]);\n  const [toClub, setToClub] = useState(false);\n  const [viewName, setViewName] = useState('');\n  const [updater, setUpdater] = useState(false);\n\n  const getClubs = () => {\n    const payload = {\n      id: parseInt(userId, 10),\n    };\n\n    axios({\n      url: `${domain}/Homepage/get_book_clubs`,\n      method: 'post',\n      data: payload,\n      headers: { Authorization: `Token ${token}` },\n    })\n      .then((response) => {\n        setClubs(response.data);\n      });\n  };\n\n  const openMenu = () => {\n    if (menuOpen) {\n      setMenuOpen(false);\n      setOpenedWidth(0);\n      getClubs();\n    } else {\n      getClubs();\n      setMenuOpen(true);\n      setOpenedWidth(240);\n    }\n  };\n\n  const setLoginState = (loggedInState) => {\n    setloggedIn(loggedInState);\n  };\n\n  const logout = () => {\n    // set the token back to it's default.\n    toggleToken('default token');\n    setLoginState(false);\n    setOpenedWidth(0);\n  };\n\n  const disableRedirect = () => {\n    setToAccount(false);\n    setToClub(false);\n  };\n\n  useEffect(() => {\n    disableRedirect();\n    setUpdater(!updater);\n  }, [toAccount, toClub]);\n\n  const goToAccountView = () => {\n    setToAccount(true);\n  };\n\n  const goToClub = (ID) => {\n    setClubIndex(ID);\n    setToClub(true);\n    openMenu();\n  };\n\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n\n      <div className=\"DrawerWrapper\">\n        {\n          loggedIn && menuOpen ? (\n            <div>\n              <Drawer variant=\"permanent\" anchor=\"left\">\n                <Typography style={{ width: openedWidth, height: 56 }} />\n                <List style={{ width: openedWidth }}>\n                  {clubs.map((club, index) => (\n                    <ListItem button key={club.Name} onClick={() => goToClub(club.BookClub_ID)}>\n                      <ListItemIcon>\n                        {index % 2 === 0 ? <ChatBubbleIcon /> : <ChatBubbleIcon />}\n                      </ListItemIcon>\n                      <ListItemText primary={club.Name} />\n                    </ListItem>\n                  ))}\n                </List>\n              </Drawer>\n            </div>\n          )\n            : <div />\n        }\n\n        <div className=\"AppBarWrapper\">\n          <AppBar position=\"fixed\" style={{ paddingLeft: openedWidth }}>\n            <Toolbar>\n              <Grid container direction=\"row\" justify=\"space-between\" style={{ width: '100%' }}>\n                <Grid item>\n                  <Grid container direction=\"row\" justify=\"flex-start\" alignItems=\"center\" spacing={2}>\n                    <Grid item>\n                      <IconButton edge=\"end\" disabled={!loggedIn} onClick={openMenu} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                      </IconButton>\n                    </Grid>\n\n                    <Grid item>\n                      <Typography variant=\"h6\" noWrap>\n                        {viewName}\n                      </Typography>\n                    </Grid>\n\n                  </Grid>\n                </Grid>\n                <Grid item>\n                  <Grid container direction=\"row\" justify=\"flex-end\" alignItems=\"center\" spacing={2}>\n                    <Grid item>\n                      {\n                        loggedIn ? (\n                          <div>\n                            <Grid item>\n                              <IconButton color=\"inherit\" onClick={goToAccountView}>\n                                <PersonOutlineIcon />\n                              </IconButton>\n                            </Grid>\n                          </div>\n                        )\n                          : <div />\n                      }\n                    </Grid>\n\n                    <Grid item>\n                      {\n                        loggedIn ? (\n                          <Button color=\"inherit\" onClick={logout}>\n                          logout\n                          </Button>\n                        )\n                          : <div />\n                      }\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        </div>\n\n      </div>\n      <div className=\"ViewWrapper\" style={{ marginLeft: openedWidth, marginTop: 90 }}>\n        <Router>\n\n          { !loggedIn ? (<Redirect to=\"/login/\" />) : <div /> }\n          { toAccount ? (<Redirect to=\"/account_setting\" />) : <div /> }\n          { toClub ? (<Redirect to={`/redirect/${clubIndex}`} />) : <div /> }\n\n          <Switch>\n            <Route path=\"/account_setting\">\n              <AccountSettingView\n                setLoginState={setLoginState}\n                setViewName={setViewName}\n                disableRedirect={disableRedirect}\n              />\n            </Route>\n\n            <Route path=\"/club/:clubId/poll\">\n              <PollView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n            <Route path=\"/club/:clubId/meeting\">\n              <MeetingView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n            <Route path=\"/club/:clubId/discussion/:discuzId/:threadTitle\">\n              <DiscussionThreadsView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n            <Route path=\"/club/:clubId/discussion\">\n              <ClubDiscussionView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n            <Route path=\"/club/:clubId/admin\">\n              <ClubAdminView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n            <Route path=\"/redirect/:clubId\">\n              <ClubRedirect />\n            </Route>\n\n            <Route path=\"/club/:clubId\">\n              <ClubHomeView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n            <Route path=\"/login\">\n              <LoginView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n            <Route path=\"/register\">\n              <RegisterView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n            <Route path=\"/dashboard\">\n              <DashboardView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n            <Route path=\"/\">\n              <DashboardView setLoginState={setLoginState} setViewName={setViewName} />\n            </Route>\n\n          </Switch>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","\nimport React, { useState, useEffect } from 'react';\n\nimport { UserContext } from './UserContext';\nimport App from './App'\n\nclass MainApp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleToken = (data) => {\n      this.setState(state => ({\n        token : data.token,\n        userId: data.id,\n      }));\n    };\n\n    this.setloggedIn = (value) => {\n      this.setState(state => ({\n        loggedIn: value\n      }));\n    }\n\n    this.state = {\n      token: \"default token\",\n      toggleToken: this.toggleToken,\n      loggedIn: false,\n      userId: 0,\n      setloggedIn: this.setloggedIn\n    };\n  }\n\n  render() {\n    return (\n      <UserContext.Provider value={this.state}>\n        <App />\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default MainApp;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './MainApp';\n\nrequire('dotenv').config();\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/bookface.8734bc95.jpg\";"],"sourceRoot":""}